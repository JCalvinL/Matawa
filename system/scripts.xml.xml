<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.0">
    <ScriptPackage>
        <ScriptGroup isActive="yes" isFolder="yes">
            <name>system</name>
            <packageName></packageName>
            <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
            <eventHandlerList/>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>vitals</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>prompt</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>prompt</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function prompt_function()
--display(afflictions)
 did_diag = false
 if sent.assess then
  enemy_afflictions()
  sent.assess = false
 end
 if sent.ih then
  if threatened then
   threatened = false
  elseif not targeted then
   toggles.bashing = false
   if toggles.shadowmending and my.class == &quot;rogue&quot; then
    if bashing_shadowmend and have_def(&quot;shadowmend&quot;) then
     set_send(&quot;shadowmend&quot;)
     bashing_shadowmend = false
    end
    if defenses.def_hiding.state ~= &quot;deffed&quot; and percents.guile &lt;= 80 then
     set_send(&quot;hide&quot;)
    end
   end
  end
 end
 sent.ih = false
 if ashfall then
  aff_have(&quot;asthma&quot;)
  ashfall = false
 end
 if check_reckless and percents.health == 100 and percents.endurance == 100 and vitals.adrenaline == 100 then
  aff_have(&quot;recklessness&quot;)
 end
 check_reckless = false
 if string.find(my.stats, &quot;b&quot;) then
  balance.balance = true
 else
  if balance.balance then
   lose_balance(&quot;balance&quot;)
  end
  balance.balance = false
 end
 if string.find(my.stats, &quot;x&quot;) then
  balance.equilibrium = true
 else
  if balance.equilibrium then
   lose_balance(&quot;equilibrium&quot;)
  end
  balance.equilibrium = false
 end
 if string.find(my.stats, &quot;@&quot;) then
  def_have(&quot;spellshield&quot;)
 elseif defenses.def_spellshield.state ~= &quot;waiting&quot; then
  def_remove(&quot;spellshield&quot;)
 end
 if string.find(my.stats, &quot;p&quot;) then
  aff_have(&quot;prone&quot;)
 else
  aff_remove(&quot;prone&quot;)
 end
 riding = string.find(my.stats, &quot;r&quot;)
 if string.find(my.stats, &quot;%*%*%*&quot;) then
  vitals.cadence = 3
 elseif string.find(my.stats, &quot;%*%*&quot;) then
  vitals.cadence = 2
 elseif string.find(my.stats, &quot;%*&quot;) then
  vitals.cadence = 1
 else
  vitals.cadence = 0
 end
 if not delete_prompt then
  if toggles.percents then
   cecho(color_it(percents.health)..&quot;\n&quot;..percents.health..&quot;%h, &quot;)
  else
   cecho(color_it(percents.health)..&quot;\n&quot;..vitals.health..&quot;h, &quot;)
  end
  cecho(color_it(percents.endurance)..vitals.endurance..&quot;e, &quot;)
  if my.class == &quot;magician&quot; then
   if toggles.percents then
    cecho(color_it(percents.magic)..percents.magic..&quot;%m, &quot;)
   else
    cecho(color_it(percents.magic)..vitals.magic..&quot;m, &quot;)
   end
  elseif my.class == &quot;rogue&quot; then
   cecho(color_it(percents.guile)..vitals.guile..&quot;g, &quot;)
  elseif my.class == &quot;priest&quot; then
   cecho(color_it(percents.faith)..vitals.faith..&quot;f, &quot;)
  end
  cecho(&quot;&lt;dark_green&gt;&quot;..gmcp.Char.Vitals.nl..&quot;x &quot;)
  for i = 1,vitals.cadence do
   cecho(&quot;&lt;purple&gt;*&quot;)
  end
  if balance.equilibrium then
   echo(&quot;x&quot;)
  else
   echo(&quot;-&quot;)
  end
  if balance.balance then
   echo(&quot;b&quot;)
  else
   echo(&quot;-&quot;)
  end
  if my.class == &quot;soldier&quot; and can.dual then
   if balance.offhand then
    echo(&quot;2&quot;)
   else
    echo(&quot;-&quot;)
   end
  end
  if my.class == &quot;magician&quot; then
   if defenses.def_spellshield.state == &quot;deffed&quot; then
    echo(&quot;@&quot;)
   else
    echo(&quot;-&quot;)
   end
  end
  if riding then
   echo(&quot;r&quot;)
  else
   echo(&quot;-&quot;)
  end
  if have_aff(&quot;prone&quot;) then
   echo(&quot;p&quot;)
  end
  if have_aff(&quot;stun&quot;) then
   echo(&quot;s&quot;)
  end
  if have_aff(&quot;sleep&quot;) then
   echo(&quot;l&quot;)
  end
  if have_aff(&quot;unconscious&quot;) then
   echo(&quot;u&quot;)
  end
  if not_entangled() then

  else
   echo(&quot;w&quot;)
  end
  if vampire then
   echo(&quot; B:&quot;..vitals.blood..&quot;%&quot;)
  end
  echo(&quot; A:&quot;)
  cecho(&quot;&lt;red&gt;&quot;..vitals.adrenaline..&quot;%&quot;)
  if toggles.bashing then
   echo(&quot; - [&quot;..target..&quot;]&quot;)
  else
   echo(&quot; - [&quot;..targ..&quot;]&quot;)
  end
  cecho(enemy_health)
  if vitals.health_loss &gt; 0 then
   echo(&quot; H:+&quot;..vitals.health_loss)
  elseif vitals.health_loss &lt; 0 then
   echo(&quot; H:&quot;..vitals.health_loss)
  elseif toggles.fullprompt then
   echo(&quot; H:0&quot;)
  end
  if vitals.endurance_loss &gt; 0 then
   echo(&quot; E:+&quot;..vitals.endurance_loss)
  elseif vitals.endurance_loss &lt; 0 then
   echo(&quot; E:&quot;..vitals.endurance_loss)
  elseif toggles.fullprompt then
   echo(&quot; E:0&quot;)
  end
  if my.class == &quot;magician&quot; then
   if vitals.magic_loss &gt; 0 then
    echo(&quot; M:+&quot;..vitals.magic_loss)
   elseif vitals.magic_loss &lt; 0 then
    echo(&quot; M:&quot;..vitals.magic_loss)
   elseif toggles.fullprompt then
    echo(&quot; M:0&quot;)
   end
  end
  if my.class == &quot;priest&quot; then
   if vitals.faith_loss &gt; 0 then
    echo(&quot; F:+&quot;..vitals.faith_loss)
   elseif vitals.faith_loss &lt; 0 then
    echo(&quot; F:&quot;..vitals.faith_loss)
   elseif toggles.fullprompt then
    echo(&quot; F:0&quot;)
   end
  end
 else
  delete_prompt = false
 end
 vitals.old_health = vitals.health
 vitals.old_endurance = vitals.endurance
 if my.class == &quot;magician&quot; then
  vitals.old_magic = vitals.magic
 elseif my.class == &quot;priest&quot; then
  vitals.old_faith = vitals.faith
 end
 do_all()
end</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>misc</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>able</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function have_aff(affliction)
 if not string.find(affliction, &quot;aff_&quot;) then
  affliction = &quot;aff_&quot;..affliction
 end
 if afflictions[affliction].state == &quot;afflicted&quot; then
  return true
 else
  return false
 end
end

function not_aff(affliction)
 if not string.find(affliction, &quot;aff_&quot;) then
  affliction = &quot;aff_&quot;..affliction
 end
 if afflictions[affliction].state ~= &quot;healed&quot; then
  return false
 else
  return true
 end
end

function have_def(defense)
 if not string.find(defense, &quot;def_&quot;) then
  defense = &quot;def_&quot;..defense
 end
 if defenses[defense].state ~= &quot;deffed&quot; then
  return false
 else
  return true
 end
end

function have_slow()
 if have_aff(&quot;timewarp&quot;) or
    have_aff(&quot;divine_censure&quot;) then
  return true
 else
  return false
 end
end

function am_functional()
 if have_aff(&quot;stun&quot;) or
    have_aff(&quot;unconscious&quot;) then
  return false
 else
  return true
 end
end

function not_entangled()
 if not_aff(&quot;impale&quot;) and
    not_aff(&quot;grab&quot;) and
    not_aff(&quot;earthbind&quot;) and
    not_aff(&quot;feed&quot;) and
    not_aff(&quot;oubliette&quot;) and
    not_aff(&quot;hogtie&quot;) and
    not_aff(&quot;hostage&quot;) then
  return true
 else
  return false
 end
end

function can_overdrive()
 if not_entangled() and
    not_aff(&quot;depression&quot;) and
    not_aff(&quot;tainted_aura&quot;) then
  return true
 else
  return false
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>delay time</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function delay()
 if have_slow() then
  return 2
 elseif have_aff(&quot;stupidity&quot;) then
  return 0.5
 else
  return 1
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>balance timers</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function balance_check()
 for i in pairs(balance_timers) do
  if balance_timers[i].cap ~= 0 and not balance[i] and getStopWatchTime(balance_timers[i].timer) &gt;= balance_timers[i].cap then
   timeout_balance(i)
  end
 end
end

function timeout_balance(type)
 balance[type] = true
 cecho(&quot;&lt;brown&gt;\n[Resetting balance: &quot;..type..&quot;!]&quot;)
 send(&quot; &quot;)
end

function lose_balance(type)
 x = stopStopWatch(balance_timers[type].timer)
 startStopWatch(balance_timers[type].timer)
 take_balance(type)
end

function regain_balance(type)
 deleteLine()
 if type == &quot;balance&quot; or type == &quot;equilibrium&quot; or type == &quot;offhand&quot; then
  cecho(&quot;&lt;dark_orange&gt;\nYou: REGAIN &quot;..type)
 else
  cecho(&quot;&lt;brown&gt;\nYou: REGAIN &quot;..type)
 end
 x = stopStopWatch(balance_timers[type].timer)-getNetworkLatency()
 if x &gt; 0 then
  echo(&quot; &quot;..x)
 end
 gain_balance(type)
end

function take_balance(type)
 balance[type] = false
end

function gain_balance(type)
 balance[type] = true
-- waiting[type] = false
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>toggles</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function toggle(toggle)
 if toggles[toggle] then
  toggles[toggle] = false
  echo(string.title(toggle)..&quot; OFF!&quot;)
  send(&quot; &quot;)
 else
  toggles[toggle] = true
  echo(string.title(toggle)..&quot; ON!&quot;)
  send(&quot; &quot;)
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>reset</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function reset_waiting()
 for i in pairs(waiting) do
  waiting[i] = false
 end
end
function reset_balance()
 for i in pairs(balance) do
  balance[i] = true
 end
end
function reset_defend()
 for i in pairs(attacks) do
  ended(i)
 end
end
function reset_attacks()
 for i in pairs(my_attacks) do
  didend(i)
 end
end
function reset_affliction()
 for i in pairs(afflictions) do
  aff_remove(i)
 end
end
function reset_affwaiting()
 for i in pairs(afflictions) do
  if afflictions[i].state == &quot;waiting&quot; then
   afflictions[i].state = &quot;afflicted&quot;
  end
 end
end
function reset_defenses()
 for i in pairs(defenses) do
  def_remove(i)
 end
end
function soft_reset()

 riding = false
 bolero = false
 enemy_mage = &quot;none&quot;
 enemy_priest = &quot;none&quot;
 status.writhing = false
 defending = false
 current_defense = &quot;none&quot;

 reset_waiting()
 reset_balance()
 reset_defend()
end

function reset_all()
 gmcp.Char.Vitals.ap = -1

 need_wield = false
 need_last_stand = false
 need_heal = false 

 recovering_balance = false
 recovering_equilibrium = false

 toggles.bashing = false
 targeted = false
 have_target = false
 need_loot = false
 toggles.fasthunt = false

 toggles.fishing = false

 soft_reset()
 reset_affliction()
 load_def(&quot;none&quot;)
 reset_defenses()
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>color it</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function color_it(percentage)
 if percentage == nil then
  return &quot;?&quot;
 end
 if percentage &lt; 1 then
  color = &quot;&lt;brown&gt;&quot;
 elseif percentage &lt;= 25 then
  color = &quot;&lt;red&gt;&quot;
 elseif percentage &lt;= 50 then
  color = &quot;&lt;dark_orange&gt;&quot;
 elseif percentage &lt;= 75 then
  color = &quot;&lt;yellow&gt;&quot;
 else
  color = &quot;&lt;dark_green&gt;&quot;
 end
 return color
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>enemy afflictions</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function enemy_afflictions()
 if (enemy_affs.prone) or (enemy_affs.broken_right_arm and enemy_affs.broken_left_arm) then
  echo(&quot;\nEnemy can't attack!&quot;)
 end
 if (enemy_affs.prone) or (enemy_affs.terror) or (enemy_affs.hamstrung) or (enemy_affs.broken_right_leg and enemy_affs.broken_left_leg) then
  echo(&quot;\nEnemy can't flee!&quot;)
 end
 if enemy_affs.atoning and enemy_affs.heretic and enemy_affs.retribution then
  echo(&quot;\nEnemy can be judged!&quot;)
 end
 if enemy_affs.tainted_aura or enemy_affs.depression then
  echo(&quot;\nEnemy can't overdrive!&quot;)
 end
 if enemy_affs.concussion and enemy_affs.epilepsy and enemy_affs.impatience then
  echo(&quot;\nEnemy can't focus!&quot;)
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>pack stuff</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_pack(command)
 if toggles.closing then
  set_send(&quot;open &quot;..my.container)
 end
 set_send(command)
end</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>variables</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>options</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

--OPTIONS
my = {
name = &quot;&quot;,
stats = &quot;&quot;,
weapon = &quot;longsword&quot;,
container = &quot;pack&quot;,
class = &quot;&quot;,
mount = &quot;9816&quot;,
area = &quot;&quot;,
room = &quot;0&quot;
}

can = {
vault = true,
contort = true,
repulse = true,
counter = false,
dual = false,
berserk = true,
sunder = false,
laststand = false,
inquartata = false,
shadowmend = false,
barrage = false,
ignite = false,
icespikes = false,
anachronize = false,
immolate = false,
savage = false,
holyfire = false,
holysword = false
}

--TOGGLES
toggles = {
healing = true,
paused = false,
gathering = true,
defending = true,
standing = true,
killing = true,
bleeding = true,
berserking = false,
threatening = false,
sundering = false,
fleching = false,
savaging = false,
shadowmending = true,
hereticing = false,
igniting = false,
anachronizing = false,
immolating = false,
spiking = false,
barraging = false,
bashing = false,
fishing = false,
looting = true,
generics = false,
fasthunt = false,
ratting = false,
closing = false,
marching = false,
percents = true,
fullprompt = false,
looping = false,
defecho = true,
atkecho = true
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>status</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

status = {
waking = false,
writhing = false,
shielding = false
}

vitals = {
adrenaline = 0,
cadence = 0,
health = 0,
endurance = 0,
magic = 0,
guile = 0,
faith = 0,
old_health = 0,
old_endurance = 0,
old_magic = 0,
old_guile = 0,
old_faith = 0,
health_loss = 0,
endurance_loss = 0,
magic_loss = 0,
guile_loss = 0,
faith_loss = 0
}

max = {
health = 0,
endurance = 0,
magic = 0,
guile = 0,
faith = 0
}

percents = {
health = 100,
endurance = 100,
magic = 100,
guile = 100,
faith = 100
}

balance = {
balance = true,
equilibrium = true,
offhand = true,
overdrive = true,
focus = true,
anachronize = true,
recover = true,
concentrate = true
}

waiting = {
balance = false,
offhand = false,
equilibrium = false,
focus = false,
wake = false,
stand = false,
writhe = false,
overdrive = false,
ih = false,
slow = false,
sent = false
}

balance_timers = {
balance = {timer = createStopWatch(), cap = 0},
equilibrium = {timer = createStopWatch(), cap = 0},
offhand = {timer = createStopWatch(), cap = 0},
overdrive = {timer = createStopWatch(), cap = 0},
focus = {timer = createStopWatch(), cap = 0},
anachronize = {timer = createStopWatch(), cap = 0},
recover = {timer = createStopWatch(), cap = 0},
concentrate = {timer = createStopWatch(), cap = 0}
}

last = {
focus = &quot;none&quot;,
overdrive = &quot;none&quot;,
stand = &quot;none&quot;,
writhe = &quot;none&quot;,
special = &quot;none&quot;,
balance = &quot;none&quot;,
equilibrium = &quot;none&quot;,
balanceequilibrium = &quot;none&quot;,
balancetake = &quot;none&quot;,
equilibriumtake = &quot;none&quot;,
needybalancetake = &quot;none&quot;,
needyequilibriumtake = &quot;none&quot;,
balanceequilibriumtake = &quot;none&quot;
}

sent = {
def = false,
diag = false,
assess = false,
ih = false
}

reject = {
mage = &quot;none&quot;,
priest = &quot;none&quot;,
lust = &quot;none&quot;
}

--OTHER STATUSES
riding = false
bolero = false
need_wield = false
need_last_stand = false
need_heal = false
ashfall = false
recent_defend = false
fleeing = false
opening = false
removing = false
slow_command = &quot;&quot;
heal_priority = 10000
vampire = false</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>landmarks</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

landmarks = {
kron = 567,
ssg = 2044,
elv = 5790,
silb = 5868,
imps = 4718,
crypt = 4594,
th = 2343,
mmc = 5954,
uru = 5830,
dam = 3458,
egg = 4890,
sed = 7117,
yar = 5719,
fval = 7027,
igt = 3151,
swamp = 4008,
rob1 = 6129,
rob2 = 166,
bosun = 6757
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>misc</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

assess_value = 0
assess_color = &quot;&quot;
last_type = &quot;none&quot;
last_item = &quot;none&quot;
check_reckless = false


--DEFENDING STUFF
enemy_attack = &quot;none&quot;
enemy_attacker = &quot;none&quot;
enemy_class = &quot;none&quot;
enemy_weapon = &quot;none&quot;
next_defense = &quot;dodge&quot;
current_defense = &quot;none&quot;
defending = false
current_delay = 0
next_attack = &quot;none&quot;
next_equil = &quot;none&quot;
targ = &quot;none&quot;
ally = nil
blessed = &quot;none&quot;

--BASHING STUFF
target = &quot;none&quot;
targeted = false
have_target = false
target_word = &quot;&quot;
target_number = &quot;&quot;
target_desc = &quot;&quot;
target_type = &quot;long&quot;
target_priority = 10000
area_found = false
have_offerings = false
possible_targets = {}
corpses = {}
gathering = {}
need_loot = false
temperature = nil
threatened = false
sundered = false
fleched = false
savaged = false
ignited = false
hereticed = false
barrage = true
inquartata = false
new_area = false
new_room = false</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>load options</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

attack_times = {}
attack_timers = {}
if string.char(getMudletHomeDir():byte()) == &quot;/&quot; then
 sep = &quot;/&quot;
else
 sep = &quot;\\&quot;
end
if getMudletHomeDir()..sep..&quot;times&quot; ~= nil then
 local DB = getMudletHomeDir()..sep..&quot;times&quot;
 table.load(DB, attack_times)
end
if getMudletHomeDir()..sep..&quot;my&quot; ~= nil then
 local DB = getMudletHomeDir()..sep..&quot;my&quot;
 table.load(DB, my)
end
if getMudletHomeDir()..sep..&quot;can&quot; ~= nil then
 local DB = getMudletHomeDir()..sep..&quot;can&quot;
 table.load(DB, can)
end
if getMudletHomeDir()..sep..&quot;toggles&quot; ~= nil then
 local DB = getMudletHomeDir()..sep..&quot;toggles&quot;
 table.load(DB, toggles)
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>tables</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

--FISHING STUFF
fishing = {
stat = &quot;baiting&quot;,
bait = &quot;shrimp&quot;,
distance = &quot;&quot;,
dir = &quot;n&quot;
}

--AUTO-LEARNING LIST
tutors = {
&quot;Tovan&quot;,
&quot;Niobe&quot;,
&quot;Tileh&quot;,
&quot;Edram&quot;,
&quot;Cocoamel&quot;,
&quot;Narul&quot;,
&quot;Gravis&quot;,
&quot;Jingo&quot;,
&quot;Calin&quot;,
&quot;Fingers&quot;,
&quot;Orina&quot;,
&quot;Lathfain&quot;,
&quot;Vhati&quot;
}

--WEAPON TYPES LIST
weapons = {
&quot;saber&quot;,
&quot;longsword&quot;,
&quot;rapier&quot;,
&quot;flail&quot;,
&quot;mace&quot;,
&quot;morning star&quot;,
&quot;claymore&quot;,
&quot;axe&quot;,
&quot;spear&quot;,
&quot;maul&quot;,
&quot;warhammer&quot;,
&quot;club&quot;
}</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>gmcp</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>gmcp_vitals</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function gmcp_vitals()
 if string.find(gmcp.Char.Status.class, &quot;Soldier&quot;) then 
  my.class = &quot;soldier&quot; 
 elseif string.find(gmcp.Char.Status.class, &quot;Rogue&quot;) then 
  my.class = &quot;rogue&quot; 
 elseif string.find(gmcp.Char.Status.class, &quot;Magician&quot;) then 
  my.class = &quot;magician&quot; 
 elseif string.find(gmcp.Char.Status.class, &quot;Priest&quot;) then 
  my.class = &quot;priest&quot; 
 else 
  my.class = &quot;none&quot; 
 end 
 my.name = gmcp.Char.Status.name

 vitals.adrenaline = tonumber(gmcp.Char.Vitals.ap)/10
 vitals.health = tonumber(gmcp.Char.Vitals.hp)
 vitals.endurance = tonumber(gmcp.Char.Vitals.ep)
 max.health = tonumber(gmcp.Char.Vitals.maxhp)
 max.endurance = tonumber(gmcp.Char.Vitals.maxep)
 percents.health = math.floor((vitals.health/max.health)*100)
 percents.endurance = math.floor((vitals.endurance/max.endurance)*100)
 vitals.health_loss = vitals.health - vitals.old_health
 vitals.endurance_loss = vitals.endurance - vitals.old_endurance
 vitals.old_health = vitals.health
 vitals.old_endurance = vitals.endurance
 if my.class == &quot;magician&quot; then
  vitals.magic = tonumber(gmcp.Char.Vitals.mp)
  max.magic = tonumber(gmcp.Char.Vitals.maxmp)
  percents.magic = math.floor((vitals.magic/max.magic)*100)
  vitals.magic_loss = vitals.magic - vitals.old_magic
  vitals.old_magic = vitals.magic
 elseif my.class == &quot;rogue&quot; then
  vitals.guile = tonumber(gmcp.Char.Vitals.gp)
  max.guile = tonumber(gmcp.Char.Vitals.maxgp)
  percents.guile = math.floor((vitals.guile/max.guile)*100)
 elseif my.class == &quot;priest&quot; then
  vitals.faith = tonumber(gmcp.Char.Vitals.fp)
  max.faith = tonumber(gmcp.Char.Vitals.maxfp)
  percents.faith = math.floor((vitals.faith/max.faith)*100)
  vitals.faith_loss = vitals.faith - vitals.old_faith
  vitals.old_faith = vitals.faith
 end
 if have_slow() then
 
 else
  do_all()
 end
end
</script>
                        <eventHandlerList>
                            <string>gmcp.Char.Vitals</string>
                        </eventHandlerList>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>gmcp_room</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function gmcp_room()
--send(&quot;get scarf&quot;)

 if my.room ~= gmcp.Room.Info.num then
  aff_remove(&quot;timewarp&quot;)
  bolero = false
  need_loot = false
  if toggles.fasthunt then
   new_room = true
  end
  if fleeing then
   send(&quot;map&quot;)
   fleeing = false
  end
  do_turnin()
  my.room = gmcp.Room.Info.num
 end

 if my.area ~= gmcp.Room.Info.area then
  my.area = gmcp.Room.Info.area
  new_area = true
 end

 if map[gmcp.Room.Info.area] == nil then
  map[gmcp.Room.Info.area] = {}
  cecho(&quot;&lt;green&gt;New Area: &quot;..gmcp.Room.Info.area..&quot;\n&quot;)
 end
 if map[gmcp.Room.Info.area][gmcp.Room.Info.num] == nil then
  map[gmcp.Room.Info.area][gmcp.Room.Info.num] = {}
  map[gmcp.Room.Info.area][gmcp.Room.Info.num].name = gmcp.Room.Info.name
  map[gmcp.Room.Info.area][gmcp.Room.Info.num].terrain = gmcp.Room.Info.environment
  map[gmcp.Room.Info.area][gmcp.Room.Info.num].exits = gmcp.Room.Info.exits
  cecho(&quot;&lt;green&gt;New Room: &quot;..gmcp.Room.Info.num)
--  display(map[gmcp.Room.Info.area][gmcp.Room.Info.num])
 end
end</script>
                        <eventHandlerList>
                            <string>gmcp.Room.Info</string>
                        </eventHandlerList>
                    </Script>
                </ScriptGroup>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>healing</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>do functions</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <ScriptGroup isActive="yes" isFolder="yes">
                        <name>main</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                        <eventHandlerList/>
                        <Script isActive="yes" isFolder="no">
                            <name>do all</name>
                            <packageName></packageName>
                            <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_all()
 balance_check()
 aff_check()
 def_check()
 if not toggles.paused then
  if have_slow() then
--echo(&quot;slow&quot;)
   do_slow()
  else
   if toggles.healing then
    do_healing()
   end
   if toggles.bashing then
    do_bashing()
   end
   if toggles.fishing then
    do_fishing()
   end
  end
 end
end</script>
                            <eventHandlerList/>
                        </Script>
                        <Script isActive="yes" isFolder="no">
                            <name>do healing</name>
                            <packageName></packageName>
                            <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_healing()
 if toggles.healing and am_functional() then
  if have_aff(&quot;sleep&quot;) and toggles.standing and (not status.waking) and (not waiting.wake) then
   echo(&quot;(wake)&quot;)
   set_send(&quot;wake&quot;)
   waiting.wake = true
   tempTimer( delay(), [[waiting.wake = false]] )
  end
  if not_aff(&quot;sleep&quot;) then
   if need_wield and balance.balance and balance.equilibrium and not_entangled() then
    set_send(&quot;wield &quot;..my.weapon)
   end
   if need_loot then
    do_loot()
   end
   do_overdrive()
   do_diag()
   do_queue()
   do_stuff()
   do_attack()
   do_equil()
  end
 end
end</script>
                            <eventHandlerList/>
                        </Script>
                        <Script isActive="yes" isFolder="no">
                            <name>do bashing</name>
                            <packageName></packageName>
                            <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_bashing()
 if (not targeted) and (not waiting.ih) then
  corpes = {}
  gathering = {}
  set_send(&quot;ih&quot;)
  waiting.ih = true
 elseif targeted then
  for i in ipairs(professions) do
   if professions[i].class == my.class then
    professions[i].bashfunc()
   end
  end
 end
end
</script>
                            <eventHandlerList/>
                        </Script>
                        <Script isActive="yes" isFolder="no">
                            <name>do fishing</name>
                            <packageName></packageName>
                            <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_fishing()
 if balance.balance and balance.equilibrium and (not waiting.balance) then
  if fishing.stat == &quot;baiting&quot; then
   send(&quot;vout &quot;..fishing.bait)
   send(&quot;fishing bait with &quot;..fishing.bait)
  elseif fishing.stat == &quot;casting&quot; then
   send(&quot;fishing cast &quot;..fishing.dir..&quot; &quot;..fishing.distance)
  elseif fishing.stat == &quot;teasing&quot; then
   send(&quot;fishing tease&quot;)
  elseif fishing.stat == &quot;reeling&quot; then
   send(&quot;fishing reel&quot;)
  end
  waiting.balance = true
  tempTimer( 1, [[waiting.balance = false]] )
 end
end</script>
                            <eventHandlerList/>
                        </Script>
                    </ScriptGroup>
                    <ScriptGroup isActive="yes" isFolder="yes">
                        <name>misc</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                        <eventHandlerList/>
                        <Script isActive="yes" isFolder="no">
                            <name>do turnin</name>
                            <packageName></packageName>
                            <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_turnin()
 if gmcp.Room.Info.num == 4718 then
  send(&quot;give imp to tracker&quot;)
 elseif gmcp.Room.Info.num == 6009 then
  send(&quot;give ore to galdur&quot;)
 end
end</script>
                            <eventHandlerList/>
                        </Script>
                    </ScriptGroup>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>healing functions</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>balance/equilibrium</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_special(current)
 echo(&quot; (&quot;..defenses[current].balance.special..&quot;)&quot;)
 send(defenses[current].balance.special)
 defenses[current].state = &quot;waiting&quot;
 startStopWatch(defenses[current].timer)
end

function do_balance_need(current)
 if balance.balance and (not waiting.balance) and not_entangled() then
  echo(&quot; (&quot;..defenses[current].balance.balanceneed..&quot;)&quot;)
  send(defenses[current].balance.balanceneed)
  defenses[current].state = &quot;waiting&quot;
  startStopWatch(defenses[current].timer)
 end
end

function do_equilibrium_need(current)
 if balance.equilibrium and (not waiting.equilibrium) and not_entangled() then
  echo(&quot; (&quot;..defenses[current].balance.equilibriumneed..&quot;)&quot;)
  send(defenses[current].balance.equilibriumneed)
  defenses[current].state = &quot;waiting&quot;
  startStopWatch(defenses[current].timer)
 end
end

function do_balance_equilibrium_need(current)
 if balance.balance and (not waiting.balance) and balance.equilibrium and (not waiting.equilibrium) and not_entangled() then
  echo(&quot; (&quot;..defenses[current].balance.balanceequilibriumneed..&quot;)&quot;)
  send(defenses[current].balance.balanceequilibriumneed)
  defenses[current].state = &quot;waiting&quot;
  startStopWatch(defenses[current].timer)
 end
end

function do_balance_take(current)
 if balance.balance and (not waiting.balance) and not_entangled() then
  echo(&quot; (&quot;..defenses[current].balance.balancetake..&quot;)&quot;)
  send(defenses[current].balance.balancetake)
  defenses[current].state = &quot;waiting&quot;
  waiting.balance = true
  startStopWatch(defenses[current].timer)
  tempTimer(0.5, [[waiting.balance = false]])
 end
end

function do_equilibrium_take(current)
 if balance.equilibrium and (not waiting.equilibrium) and not_entangled() then
  echo(&quot; (&quot;..defenses[current].balance.equilibriumtake..&quot;)&quot;)
  send(defenses[current].balance.equilibriumtake)
  defenses[current].state = &quot;waiting&quot;
  startStopWatch(defenses[current].timer)
  waiting.equilibrium = true
  tempTimer(0.5, [[waiting.equilibrium = false]])
 end
end

function do_needy_balance_take(current)
 if balance.balance and (not waiting.balance) and balance.equilibrium and (not waiting.equilibrium) and not_entangled() then
  echo(&quot; (&quot;..defenses[current].balance.needybalancetake..&quot;)&quot;)
  send(defenses[current].balance.needybalancetake)
  defenses[current].state = &quot;waiting&quot;
  startStopWatch(defenses[current].timer)
  waiting.balance = true
  tempTimer(0.5, [[waiting.balance = false]])
 end
end

function do_needy_equilibrium_take(current)
 if balance.balance and (not waiting.balance) and balance.equilibrium and (not waiting.equilibrium) and not_entangled() then
  echo(&quot; (&quot;..defenses[current].balance.needyequilibriumtake..&quot;)&quot;)
  send(defenses[current].balance.needyequilibriumtake)
  defenses[current].state = &quot;waiting&quot;
  startStopWatch(defenses[current].timer)
  waiting.equilibrium = true
  tempTimer(0.5, [[waiting.equilibrium = false]])
 end
end

function do_balance_equilibrium_take(current)
 if balance.balance and (not waiting.balance) and balance.equilibrium and (not waiting.equilibrium) and not_entangled() then
  echo(&quot; (&quot;..defenses[current].balance.balanceequilibrium..&quot;)&quot;)
  send(defenses[current].balance.balanceequilibrium)
  defenses[current].state = &quot;waiting&quot;
  startStopWatch(defenses[current].timer)
  waiting.balance = true
  tempTimer(0.5, [[waiting.balance = false]])
  waiting.equilibrium= true
  tempTimer(0.5, [[waiting.equilibrium = false]])
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>stand</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_stand(current)
 if have_aff(current) then
  if toggles.standing and (not waiting.stand) and not_entangled() and balance.balance and balance.equilibrium and not waiting.balance and not waiting.equilibrium then
   echo(&quot;(stand)&quot;)
   last_type = &quot;stand&quot;
   last_item = &quot;send&quot;
   set_send(&quot;stand&quot;)
   waiting.stand = true
   tempTimer( delay(), [[waiting.stand = false]])
   afflictions[current].state = &quot;waiting&quot;
   startStopWatch(afflictions[current].timer)
  end
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>writhe</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_writhe(current)
 if have_aff(current) then
  if (not status.writhing) and (not waiting.writhe) then
   if can.contort and vitals.adrenaline &gt;= 20 and balance.equilibrium and not waiting.equilibrium then
    echo(&quot;(contort)&quot;)
    set_send(&quot;contort&quot;)
   else
    echo(&quot;(writhe)&quot;)
    set_send(&quot;writhe&quot;)
   end
   last_type = &quot;writhe&quot;
   last_item = &quot;send&quot;
   waiting.writhe = true
   tempTimer( delay(), [[waiting.writhe = false]])
   afflictions[current].state = &quot;waiting&quot;
   startStopWatch(afflictions[current].timer)
  end
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>focus</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_focus(current)
 if have_aff(current) then
  if balance.focus and not waiting.focus and vitals.adrenaline &gt; 20 then
   if afflictions[current].cures.focus == &quot;body&quot; and not_aff(&quot;impatience&quot;) then
    if current == &quot;aff_bleeding&quot; then
     if toggles.bleeding and not bolero and not_aff(&quot;hemophilia&quot;) then
      focus(current)
     end
    else
     focus(current)
    end
   elseif afflictions[current].cures.focus == &quot;mind&quot; and not_aff(&quot;concussion&quot;) then
    focus(current)
   elseif afflictions[current].cures.focus == &quot;spirit&quot; and not_aff(&quot;epilepsy&quot;) then
    if current == &quot;aff_ill_omen&quot; then
     if not_aff(&quot;blood_omen&quot;) then
      focus(current)
     end
    else
     focus(current)
    end
   end
  end
 end
end

function focus(current)
 echo(&quot;(&quot;..afflictions[current].cures.focus..&quot;)&quot;)
 last_type = &quot;focus&quot;
 last_item = afflictions[current].cures.focus
 set_send(&quot;focus &quot;..afflictions[current].cures.focus)
 startStopWatch(afflictions[current].timer)
 afflictions[current].state = &quot;waiting&quot;
 waiting.focus = true
 tempTimer( delay(), [[waiting.focus = false]] )
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>overdrive</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_overdrive()
 if percents.magic &lt; 80 and vitals.adrenaline &gt; 25 and balance.overdrive and (not waiting.overdrive) and have_def(&quot;spellshield&quot;) and can_overdrive() then
  set_send(&quot;overdrive&quot;)
  waiting.overdrive = true
  tempTimer( delay(), [[waiting.overdrive = false]] )
 elseif percents.health &lt; 80 and vitals.adrenaline &gt; 25 and balance.overdrive and (not waiting.overdrive) and defenses.def_spellshield.state ~= &quot;deffed&quot; and can_overdrive() then
  set_send(&quot;overdrive&quot;)
  waiting.overdrive = true
  tempTimer( delay(), [[waiting.overdrive = false]] )
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>reject</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_reject(current)
 if have_aff(current) then
  if balance.balance and balance.equilibrium and (not waiting.balance) and (not waiting.equilibrium) then
   set_send(&quot;reject &quot;..reject[afflictions[current].cures.reject])
   startStopWatch(afflictions[current].timer)
   afflictions[current].state = &quot;waiting&quot;
   waiting.equilibrium = true
   tempTimer( delay(), [[waiting.equilibrium = false]] )
  end
 end
end
</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>defend</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_def(current)
 if toggles.defending and attacks[current].defend_now then
  def(attacks[current].def)
 end
end

function def(defense)
 if (defense == &quot;parry&quot;) and (my.class == &quot;soldier&quot;) and can.repulse then
  next_defense = &quot;repulse&quot;
 else
  next_defense = defense
 end
 if balance.equilibrium and (not waiting.equilibrium) and not_aff(&quot;prone&quot;) then
  if defending and current_defense == next_defense then
   echo(&quot;Already defending!&quot;)
  else
   echo(&quot;(&quot;..next_defense..&quot;)&quot;)
   set_send(next_defense)
   waiting.equilibrium = true
   tempTimer( 0.5, [[waiting.equilibrium = false]] )
  end
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>queuing</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>priorities</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

queue = {}

priorities = {
&quot;aff_divine_censure&quot;,
&quot;aff_impatience&quot;,
&quot;aff_epilepsy&quot;,
&quot;aff_concussion&quot;,
&quot;aff_malaise&quot;,
&quot;aff_impale&quot;,
&quot;aff_grab&quot;,
&quot;aff_earthbind&quot;,
&quot;aff_feed&quot;,
&quot;aff_hogtie&quot;,
&quot;aff_broken_right_arm&quot;,
&quot;aff_broken_left_arm&quot;,
&quot;aff_burst_organs&quot;,
&quot;aff_blackout&quot;,
&quot;aff_compulsion&quot;,
&quot;aff_bleeding_5&quot;,
&quot;aff_atoning&quot;,
&quot;aff_retribution&quot;,
&quot;aff_unstable&quot;,
&quot;aff_heretic&quot;,
&quot;aff_bleeding&quot;,
&quot;aff_burns&quot;,
&quot;aff_on_fire&quot;,
&quot;aff_burns_5&quot;,
&quot;aff_bleeding_4&quot;,
&quot;aff_burns_4&quot;,
&quot;aff_bleeding_3&quot;,
&quot;aff_burns_3&quot;,
&quot;aff_health_10&quot;,
&quot;aff_recklessness&quot;,
&quot;aff_blind&quot;,
&quot;aff_dizziness&quot;,
&quot;aff_bleeding_2&quot;,
&quot;aff_burns_2&quot;,
&quot;aff_bleeding_1&quot;,
&quot;aff_burns_1&quot;,
&quot;aff_tethered&quot;,
&quot;aff_warped&quot;,
&quot;aff_chilled&quot;,
&quot;aff_stupidity&quot;,
&quot;aff_paralysis&quot;,
&quot;aff_broken_left_leg&quot;,
&quot;aff_broken_right_leg&quot;,
&quot;aff_health_35&quot;,
&quot;aff_depression&quot;,
&quot;aff_tainted_aura&quot;,
&quot;aff_heart_palpitations&quot;,
&quot;aff_health_55&quot;,
&quot;aff_fear&quot;,
&quot;aff_cataplexy&quot;,
&quot;aff_maladtroitness&quot;,
&quot;aff_dystonia&quot;,
&quot;aff_ataxia&quot;,
&quot;aff_anemia&quot;,
&quot;aff_crippled&quot;,
&quot;aff_ill_omen&quot;,
&quot;aff_brain_damage&quot;,
&quot;aff_vomiting&quot;,
&quot;aff_blurry_sight&quot;,
&quot;aff_cut_tendons&quot;,
&quot;aff_clumsiness&quot;,
&quot;aff_hamstrung&quot;,
&quot;aff_weak_legs&quot;,
&quot;aff_disoriented&quot;,
&quot;aff_collapsed_lugs&quot;,
&quot;aff_agrophobia&quot;,
&quot;aff_claustrophobia&quot;,
&quot;aff_terror&quot;,
&quot;aff_sensitivity&quot;,
&quot;aff_health_75&quot;,
&quot;aff_severed_nerves&quot;,
&quot;aff_sundered_armor&quot;,
&quot;aff_headache&quot;,
&quot;aff_hemophelia&quot;,
&quot;aff_sun_allergy&quot;,
&quot;aff_commanded&quot;,
&quot;aff_holy_shock&quot;,
&quot;aff_disloyalty&quot;,
&quot;aff_deaf&quot;,
&quot;aff_dementia&quot;,
&quot;aff_broken_limb&quot;,
&quot;aff_slit_throat&quot;,
&quot;aff_faithrot&quot;,
&quot;aff_manaleech&quot;,
&quot;aff_burnt_tongue&quot;,
&quot;aff_amnesia&quot;,
&quot;aff_vindication&quot;,
&quot;aff_curse_of_tongues&quot;,
&quot;aff_waking_dreams&quot;,
&quot;aff_prone&quot;,
&quot;aff_scabies&quot;,
&quot;aff_plague&quot;,
&quot;aff_asthma&quot;,
&quot;aff_black_lung&quot;,
&quot;aff_weariness&quot;,
&quot;aff_nightmares&quot;,
&quot;aff_confusion&quot;,
&quot;aff_paranoia&quot;,
&quot;aff_hypersomnia&quot;,
&quot;aff_indiscriminate_trust&quot;,
&quot;aff_repenting&quot;,
&quot;aff_porphyria&quot;,
--DEFENCES
&quot;def_notice&quot;,
&quot;def_skywatch&quot;,
&quot;def_deathsense&quot;,
&quot;def_nightvision&quot;,
&quot;def_insomnia&quot;,
&quot;def_awareness&quot;,
&quot;def_forboding&quot;,
&quot;def_premonition&quot;,
&quot;def_selfishness&quot;,
&quot;def_combat_focus&quot;,
&quot;def_lantern&quot;,
&quot;def_sun&quot;,
&quot;def_thirdeye&quot;,
&quot;def_skull&quot;,
&quot;def_lotus&quot;,
&quot;def_hourglass&quot;,
&quot;def_rose&quot;,
&quot;def_owl&quot;,
&quot;def_tree&quot;,
&quot;def_grip&quot;,
&quot;def_warcry&quot;,
&quot;def_hiding&quot;,
&quot;def_arrowsense&quot;,
&quot;def_shadowmend&quot;,
&quot;def_windweave&quot;,
&quot;def_levitate&quot;,
&quot;def_mirror_image&quot;,
&quot;def_spellshield&quot;,
&quot;def_arcanepower&quot;,
&quot;def_stormfury&quot;,
&quot;def_anachronize&quot;,
&quot;def_waterbreathing&quot;,
&quot;def_fireshield&quot;,
&quot;def_frostshield&quot;,
&quot;def_arcaneshield&quot;,
&quot;def_electricshield&quot;,
&quot;def_witchsight&quot;,
&quot;def_divine_armor&quot;,
&quot;def_glorious&quot;,
&quot;def_illuminated&quot;,
&quot;def_radiant&quot;,
&quot;def_blessed&quot;,
&quot;def_righteous&quot;,
--ATTACKS
&quot;atk_censure&quot;,
&quot;atk_omen&quot;,
&quot;atk_cripple&quot;,
&quot;atk_cruncharms&quot;,
&quot;atk_hemorrhage&quot;,
&quot;atk_torture&quot;,
&quot;atk_cheapshot&quot;,
&quot;atk_pulverize&quot;,
&quot;atk_hamstring&quot;,
&quot;atk_impale&quot;,
&quot;atk_grab&quot;,
&quot;atk_earthbind&quot;,
&quot;atk_heretic&quot;,
&quot;atk_atonement&quot;,
&quot;atk_retribution&quot;,
&quot;atk_compulse&quot;,
&quot;atk_instability&quot;,
&quot;atk_burstorgans&quot;,
&quot;atk_disarm&quot;,
&quot;atk_flourish&quot;,
&quot;atk_immolate&quot;,
&quot;atk_glint&quot;,
&quot;atk_blackeye&quot;,
&quot;atk_avenging&quot;,
&quot;atk_wristflick&quot;,
&quot;atk_backslice&quot;,
&quot;atk_wrack&quot;,
&quot;atk_chill&quot;,
&quot;atk_cleave&quot;,
&quot;atk_sleep&quot;,
&quot;atk_knockdown&quot;,
&quot;atk_press&quot;,
&quot;atk_gale&quot;,
&quot;atk_howlofterror&quot;,
&quot;atk_puncture&quot;,
&quot;atk_heartstrike&quot;,
&quot;atk_enervating_jab&quot;,
&quot;atk_rupture&quot;,
&quot;atk_mutilating_hack&quot;,
&quot;atk_enfeeble&quot;,
&quot;atk_wildstrike&quot;,
&quot;atk_skylash&quot;,
&quot;atk_shatter&quot;,
&quot;atk_shatter_left_leg&quot;,
&quot;atk_shatter_left_arm&quot;,
&quot;atk_shatter_right_leg&quot;,
&quot;atk_shatter_right_arm&quot;,
&quot;atk_lance&quot;,
&quot;atk_vileblade&quot;,
&quot;atk_lungstab&quot;,
&quot;atk_suckerpunch&quot;,
&quot;atk_nervestrike&quot;,
&quot;atk_fleche&quot;,
&quot;atk_sunder&quot;,
&quot;atk_rake&quot;,
&quot;atk_gutsmash&quot;,
&quot;atk_slitthroat&quot;,
&quot;atk_legslice&quot;,
&quot;atk_headsmash&quot;,
&quot;atk_earbash&quot;,
&quot;atk_burstlungs&quot;,
&quot;atk_crushskull&quot;,
&quot;atk_brainbash&quot;,
&quot;atk_chestbash&quot;,
&quot;atk_lowblow&quot;,
&quot;atk_pommel&quot;,
&quot;atk_repentance&quot;,
&quot;atk_scabies&quot;,
&quot;atk_nightmare&quot;,
&quot;atk_seduce&quot;,
&quot;atk_dementia&quot;,
&quot;atk_disorient&quot;,
&quot;atk_static&quot;,
&quot;atk_tether&quot;,
&quot;atk_warp&quot;,
&quot;atk_timeshift&quot;,
&quot;atk_mandate&quot;,
&quot;atk_assault&quot;,
&quot;atk_obliterate&quot;,
&quot;atk_thrust&quot;,
&quot;atk_crossbow&quot;,
&quot;atk_corssbowed&quot;,
&quot;atk_balestra&quot;,
&quot;atk_inquartata&quot;,
&quot;atk_canto&quot;,
&quot;atk_fury&quot;,
&quot;atk_holyfire&quot;,
&quot;atk_searingarc&quot;,
&quot;atk_vindication&quot;,
&quot;atk_damnation&quot;,
&quot;atk_holysword&quot;,
&quot;atk_pimmolate&quot;,
&quot;atk_illuminate&quot;,
&quot;atk_bloodboil&quot;,
&quot;atk_embers&quot;,
&quot;atk_melt&quot;,
&quot;atk_terror&quot;,
&quot;atk_soulspear&quot;,
&quot;atk_burdensoul&quot;,
&quot;atk_withering&quot;,
&quot;atk_gravechill&quot;,
&quot;atk_icygrasp&quot;,
&quot;atk_despair&quot;,
&quot;atk_funeralmass&quot;,
&quot;atk_vision&quot;,
&quot;atk_impendingdoom&quot;,
&quot;atk_slash&quot;,
&quot;atk_shieldsmash&quot;,
&quot;atk_strike&quot;,
&quot;atk_stormlance&quot;,
&quot;atk_ignite&quot;,
&quot;atk_icespikes&quot;,
&quot;atk_keltonsknives&quot;,
&quot;atk_curseoftongues&quot;,
&quot;atk_necroticplague&quot;,
&quot;atk_savage&quot;,
&quot;atk_phlegm&quot;,
&quot;atk_mutilate&quot;,
&quot;atk_thrum&quot;,
&quot;atk_lunarbay&quot;,
&quot;atk_gluttonous&quot;,
&quot;atk_sanguis&quot;,
&quot;atk_feralrake&quot;,
&quot;atk_rending&quot;,
&quot;atk_yellowbile&quot;,
&quot;atk_knifeofwoe&quot;,
&quot;atk_carnalscream&quot;,
&quot;atk_scarlethorror&quot;,
&quot;atk_blackbile&quot;,
&quot;atk_betrayal&quot;,
&quot;atk_lash&quot;,
&quot;atk_disgust&quot;,
&quot;atk_decieve&quot;,
&quot;atk_scarab&quot;,
&quot;atk_horrify&quot;,
&quot;atk_kneel&quot;,
&quot;atk_thunder&quot;,
&quot;atk_earthquake&quot;,
&quot;atk_trip&quot;
}
</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>do queue</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_queue()
 queue = {}
 for i in pairs(afflictions) do
  if afflictions[i].state ~= &quot;healed&quot; then
   table.insert(queue, i)
  end
 end
 for k in pairs(defenses) do
  if defenses[k].state == &quot;down&quot; and defenses[k].needit then
   table.insert(queue, k)
  end
 end
 for z in pairs(attacks) do
  if attacks[z].defend_now then
   table.insert(queue, z)
  end
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>do stuff</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_stuff()
 for i in pairs(priorities) do
  for h in pairs(queue) do
   if priorities[i] == queue[h] then
    for z in ipairs(method_priority) do
     if afflictions[priorities[i]] ~= nil then
      if afflictions[priorities[i]].cures[method_priority[z].balance] ~= nil then
       method_priority[z].func(priorities[i])
      end
     elseif defenses[priorities[i]] ~= nil then
      if defenses[priorities[i]].balance[method_priority[z].balance] ~= nil then
       method_priority[z].func(priorities[i])
      end
     elseif attacks[priorities[i]] ~= nil then
      if method_priority[z].balance == &quot;defend&quot; then
       method_priority[z].func(priorities[i])
      end
     end
    end
   end
  end
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>methods</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

method_priority = {
{balance = &quot;special&quot;, func = function(current) do_special(current) end},
{balance = &quot;balanceneed&quot;, func = function(current) do_balance_need(current) end},
{balance = &quot;equilibriumneed&quot;, func = function(current) do_equilibrium_need(current) end},
{balance = &quot;balanceequilibrium&quot;, func = function(current) do_balance_equilibrium_need(current) end},
{balance = &quot;reject&quot;, func = function(current) do_reject(current) end},
{balance = &quot;focus&quot;, func = function(current) do_focus(current) end},
{balance = &quot;overdrive&quot;, func = function(current) do_overdrive(current) end},
{balance = &quot;stand&quot;, func = function(current) do_stand(current) end},
{balance = &quot;writhe&quot;, func = function(current) do_writhe(current) end},
{balance = &quot;defend&quot;, func = function(current) do_def(current) end},
{balance = &quot;balancetake&quot;, func = function(current) do_balance_take(current) end},
{balance = &quot;equilibriumtake&quot;, func = function(current) do_equilibrium_take(current) end},
{balance = &quot;needybalancetake&quot;, func = function(current) do_needy_balance_take(current) end},
{balance = &quot;needyequilibriumtake&quot;, func = function(current) do_needy_equilibrium_take(current) end},
{balance = &quot;balanceequilibriumtake&quot;, func = function(current) do_balance_equilibrium_take(current) end}
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>set actions</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function set_attack(my_attack)
 next_attack = my_attack
 if next_attack == &quot;flee&quot; then
  fleeing = true
 end
 do_all()
 if next_attack ~= &quot;none&quot; then
  cecho(&quot;&lt;brown&gt;You: QUEUE &quot;..next_attack..&quot;!&quot;)
  send(&quot; &quot;)
 end
end
function do_attack()
 if toggles.killing and (next_attack ~= &quot;none&quot;) and not_aff(&quot;prone&quot;) and not_entangled() then
  if balance.balance and not waiting.balance then
   set_send(next_attack)
   waiting.balance = true
   tempTimer(delay(), [[waiting.balance = false]])
   if not toggles.looping then
    next_attack = &quot;none&quot;
   end
  elseif balance.offhand and not waiting.offhand and my.class == &quot;soldier&quot; and can.dual then
   set_send(next_attack)
   waiting.offhand = true
   tempTimer(delay(), [[waiting.offhand = false]])
   next_attack = &quot;none&quot;
  end
 end
end

function set_equil(my_equil)
 next_equil = my_equil
 if balance.equilibrium and not_aff(&quot;prone&quot;) and not_entangled() then
  set_send(next_equil)
  waiting.equilibrium = true
  tempTimer(delay(), [[waiting.equilibrium = false]])
  next_equil = &quot;none&quot;
 else
  cecho(&quot;&lt;brown&gt;You: QUEUE &quot;..next_equil..&quot;!&quot;)
  send(&quot; &quot;)
 end
end
function do_equil()
 if toggles.killing and (next_equil ~= &quot;none&quot;) and not_aff(&quot;prone&quot;) and not_entangled() then
  if balance.equilibrium then
   set_send(next_equil)
   waiting.equilibrium = true
   tempTimer(delay(), [[waiting.equilibrium = false]])
   next_equil = &quot;none&quot;
  end
 end
end

function queue_diag()
 if balance.equilibrium and not waiting.equilibrium and am_functional() then
  send_diag()
 else
  need_diag = true
  cecho(&quot;&lt;brown&gt;You: QUEUE diagnose!&quot;)
  send(&quot; &quot;)
 end
end
function do_diag()
 if need_diag then
  send_diag()
 end
end
function send_diag()
 if balance.equilibrium and not waiting.equilibrium then
  set_send(&quot;diag&quot;)
  sent.diag = true
  waiting.equilibrium = true
  tempTimer(delay(), [[waiting.equilibrium = false]])
  tempTimer(2, [[sent.diag = false]])
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>set send</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function set_send(command)
--echo(last_type)
--echo(last_item)
--display(last)
 if have_slow() then
  if slow_command == &quot;&quot; then
   if last_type ~= &quot;none&quot; then
    last[last_type] = last_item
    last_type = &quot;none&quot;
    last_item = &quot;none&quot;
   end
   slow_command = command
  end
 else
  if last_type ~= &quot;none&quot; then
   last[last_type] = last_item
   last_type = &quot;none&quot;
   last_item = &quot;none&quot;
  end
  send(command)
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <ScriptGroup isActive="yes" isFolder="yes">
                        <name>slow</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                        <eventHandlerList/>
                        <Script isActive="yes" isFolder="no">
                            <name>do slow</name>
                            <packageName></packageName>
                            <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_slow()
 if next_attack ~= &quot;none&quot; and balance.balance and not waiting.balance and not_aff(&quot;prone&quot;) and not_entangled() then
  do_attack()
 elseif next_equil ~= &quot;none&quot; and balance.equilibrium and not waiting.equilibrium and not_aff(&quot;prone&quot;) and not_entangled() then
  do_equil()
 else
  slow_queue()
 end
 if slow_command ~= &quot;&quot; and not waiting.slow and not waiting.sent then
  send(slow_command)
  slow_command = &quot;&quot;
  waiting.sent = true
  tempTimer(1, [[waiting.sent = false]])
 end 
end</script>
                            <eventHandlerList/>
                        </Script>
                        <Script isActive="yes" isFolder="no">
                            <name>slow queue</name>
                            <packageName></packageName>
                            <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function slow_queue()
 if toggles.healing and am_functional() then
  if have_aff(&quot;sleep&quot;) and toggles.standing and (not status.waking) and (not waiting.wake) then
   echo(&quot;(wake)&quot;)
   set_send(&quot;wake&quot;)
   waiting.wake = true
   tempTimer( delay(), [[waiting.wake = false]] )
  end
  if not_aff(&quot;sleep&quot;) then
   if need_wield and balance.balance and balance.equilibrium and not_entangled() then
    set_send(&quot;wield &quot;..my.weapon)
   end
   if need_loot then
    do_loot()
   end
   do_overdrive()
   do_diag()
--   do_attack()
--   do_equil()
   do_queue()
   do_stuff()
  end
 end
end</script>
                            <eventHandlerList/>
                        </Script>
                    </ScriptGroup>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>afflictions</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>table</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

afflictions = {
--aff_health_10 = {state = &quot;healed&quot;, cures = {overdrive = &quot;send&quot;}, timer = createStopWatch()},
--aff_health_35 = {state = &quot;healed&quot;, cures = {overdrive = &quot;send&quot;}, timer = createStopWatch()},
--aff_health_55 = {state = &quot;healed&quot;, cures = {overdrive = &quot;send&quot;}, timer = createStopWatch()},
--aff_health_75 = {state = &quot;healed&quot;, cures = {overdrive = &quot;send&quot;}, timer = createStopWatch()},

aff_sleep = {state = &quot;healed&quot;, cures = {}, timer = createStopWatch()},
aff_stun = {state = &quot;healed&quot;, cures = {}, timer = createStopWatch()},
aff_unconscious = {state = &quot;healed&quot;, cures = {}, timer = createStopWatch()},
aff_prone = {state = &quot;healed&quot;, cures = {stand = &quot;send&quot;}, timer = createStopWatch()},

aff_grab = {state = &quot;healed&quot;, cures = {writhe = &quot;send&quot;}, timer = createStopWatch()},
aff_impale = {state = &quot;healed&quot;, cures = {writhe = &quot;send&quot;}, timer = createStopWatch()},
aff_earthbind = {state = &quot;healed&quot;, cures = {writhe = &quot;send&quot;}, timer = createStopWatch()},
aff_hostage = {state = &quot;healed&quot;, cures = {writhe = &quot;send&quot;}, timer = createStopWatch()},
aff_hogtie = {state = &quot;healed&quot;, cures = {writhe = &quot;send&quot;}, timer = createStopWatch()},
aff_oubliette = {state = &quot;healed&quot;, cures = {writhe = &quot;send&quot;}, timer = createStopWatch()},
aff_feed = {state = &quot;healed&quot;, cures = {writhe = &quot;send&quot;}, timer = createStopWatch()},

aff_blackout = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},

aff_compulsion = {state = &quot;healed&quot;, cures = {reject = &quot;mage&quot;, focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_command = {state = &quot;healed&quot;, cures = {reject = &quot;priest&quot;, focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_lust = {state = &quot;healed&quot;, cures = {reject = &quot;lust&quot;}, timer = createStopWatch()},

aff_timewarp = {state = &quot;healed&quot;, cures = {}, timer = createStopWatch()},
aff_divine_censure = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},

aff_blood_omen = {state = &quot;healed&quot;, cures = {}, timer = createStopWatch()},
--STOP FOCUS BODY
aff_impatience = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;},timer = createStopWatch()},
--STOP FOCUS SPIRIT
aff_epilepsy = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;},timer = createStopWatch()},
--STOP FOCUS MIND
aff_concussion = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;},timer = createStopWatch()},
--INCREASE FOCUS COST
aff_malaise = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;},timer = createStopWatch()},
--HINDER HEALING
aff_tethered = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;},timer = createStopWatch()},
aff_warped = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;},timer = createStopWatch()},
aff_stupidity = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_chilled = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;},timer = createStopWatch()},
aff_paralysis = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;},timer = createStopWatch()},
--DEADLY
aff_bleeding = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;},timer = createStopWatch()},
aff_burst_organs = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;},timer = createStopWatch()},
aff_heretic = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;},timer = createStopWatch()},
aff_atoning = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;},timer = createStopWatch()},
aff_retribution = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;},timer = createStopWatch()},
aff_unstable = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;},timer = createStopWatch()},
aff_on_fire = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_burns = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
--STOP ATTACKING
aff_broken_left_arm = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_broken_right_arm = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_broken_left_leg = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_broken_right_leg = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
--POTENTIALLY DEADLY
aff_depression = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_tainted_aura = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_recklessness = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_heart_palpitations = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_exhausted = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_infirm = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_fear = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
--STOP DEFENDING
aff_cataplexy = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_maladroitness = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_dystonia = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_ataxia = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_anemia = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
--POTENTIALLY ANNOYING
aff_crippled = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_ill_omen = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_brain_damage = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_vomiting = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
--HINDER ATTACKING
aff_blind = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_blurry_sight = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_cut_tendon = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_clumsiness = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
--HINDER FLEEING
aff_hamstrung = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_weak_legs = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_disoriented = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_dizziness = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_collapsed_lungs = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_agoraphobia = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_claustrophobia = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_terror = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
--DAMAGE OR INCREASE DAMAGE
aff_sensitivity = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_severed_nerves = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_sundered_armor = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_headache = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_hemophilia = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_sun_allergy = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
--DON'T CARE OR DOESN'T LAST
aff_holy_shock = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_disloyalty = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_deaf = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_dementia = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_broken_limb = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_slit_throat = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_faithrot = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_manaleech = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_burnt_tongue = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_amnesia = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_vindication = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_curse_of_tongues = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_waking_dreams = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},

--NOT SURE OF PRIORITY
aff_scabies = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_plague = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_asthma = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_black_lung = {state = &quot;healed&quot;, cures = {focus = &quot;body&quot;}, timer = createStopWatch()},
aff_weariness = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},

aff_nightmares = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_confusion = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_paranoia = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_anorexia = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_hypersomnia = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},
aff_indiscriminate_trust = {state = &quot;healed&quot;, cures = {focus = &quot;mind&quot;}, timer = createStopWatch()},

aff_repenting = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()},
aff_porphyria = {state = &quot;healed&quot;, cures = {focus = &quot;spirit&quot;}, timer = createStopWatch()}

}
</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>give/take</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function aff_check()
 for i in pairs(afflictions) do
  if afflictions[i].cures.writhe ~= nil then
   if getStopWatchTime(afflictions[i].timer) &gt; 5 and afflictions[i].state == &quot;waiting&quot; then
    timeout_aff(i)
   end
  elseif afflictions[i].state == &quot;waiting&quot; and getStopWatchTime(afflictions[i].timer) &gt; 2 then
   timeout_aff(i)
  end
 end
end
function timeout_aff(affliction)
 afflictions[affliction].state = &quot;afflicted&quot;
 cecho(&quot;&lt;brown&gt;\n[Resetting affliction: &quot;..affliction..&quot;!]&quot;)
 send(&quot; &quot;)
end

function aff_gain(affliction)
 deleteLine()
 cecho(&quot;&lt;blue&gt;\nYou: &lt;red&gt;GOT&lt;blue&gt; &quot;..affliction..&quot;!&quot;)
 aff_have(affliction)
end

function aff_have(affliction)
 if not string.find(affliction, &quot;aff_&quot;) then
  affliction = &quot;aff_&quot;..affliction
 end
 afflictions[affliction].state = &quot;afflicted&quot;
end

function aff_diag(affliction)
 if did_diag then
  deleteLine()
  cecho(&quot;&lt;red&gt;\n&quot;..affliction)
  aff_have(affliction)
 elseif sent.assess then
  deleteLine()
  cecho(&quot;&lt;green&gt;\n&quot;..affliction)
  enemy_affs[affliction] = true
 end
end

function aff_cure(affliction)
 deleteLine()
 cecho(&quot;&lt;blue&gt;\nYou: &lt;green&gt;HEAL&lt;blue&gt; &quot;..affliction..&quot;!&quot;)
 aff_remove(affliction)
end

function aff_remove(affliction)
 if not string.find(affliction, &quot;aff_&quot;) then
  affliction = &quot;aff_&quot;..affliction
 end
 if afflictions[affliction].cures.writhe ~= nil then
  status.writhing = false
 end
 if afflictions.aff_blackout.state == &quot;afflicted&quot; and affliction ~= &quot;aff_prone&quot; then
  queue_diag()
  soft_reset()
 end
 afflictions[affliction].state = &quot;healed&quot;
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>enemy affs</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

enemy_affs = {
divine_censure = false,
blackout = false,
--STOP FOCUS BODY
impatience = false,
--STOP FOCUS SPIRIT
epilepsy = false,
--STOP FOCUS MIND
concussion = false,
--INCREASE FOCUS COST
malaise = false,
--HINDER HEALING
tethered = false,
warped = false,
chilled = false,
stupidity = false,
paralysis = false,
--DEADLY
compulsion = false,
bleeding = false,
burst_organs = false,
heretic = false,
atoning = false,
retribution = false,
unstable = false,
on_fire = false,
burns = false,
--STOP ATTACKING
broken_left_arm = false,
broken_right_arm = false,
broken_left_leg = false,
broken_right_leg = false,
--POTENTIALLY DEADLY
depression = false,
tainted_aura = false,
recklessness = false,
heart_palpitations = false,
enfeeble = false,
infirm = false,
fear = false,
--STOP BLOCK
cataplexy = false,
maladroitness = false,
--STOP PARRY
dystonia = false,
ataxia = false,
anemia = false,
--POTENTIALLY ANNOYING
crippled = false,
ill_omen = false,
brain_damage = false,
vomiting = false,
--HINDER ATTACKING
blind = false,
blurry_sight = false,
cut_tendon = false,
clumsiness = false,
--HINDER FLEEING
hamstrung = false,
weak_legs = false,
disoriented = false,
dizziness = false,
collapsed_lungs = false,
agoraphobia = false,
claustrophobia = false,
terror = false,
--DAMAGE OR INCREASE DAMAGE
sensitivity = false,
severed_nerves = false,
sundered_armor = false,
headache = false,
hemophilia = false,
sun_allergy = false,
--DON'T CARE OR DOESN'T LAST
commanded = false,
holy_shock = false,
disloyalty = false,
deaf = false,
dementia = false,
broken_limb = false,
slit_throat = false,
faithrot = false,
manaleech = false,
burnt_tongue = false,
amnesia = false,
vindication = false,
curse_of_tongues = false,
waking_dreams = false,

prone = false,

--NOT SURE OF PRIORITY
scabies = false,
plague = false,
asthma = false,
black_lung = false,
weariness = false,

nightmares = false,
confusion = false,
paranoia = false,
anorexia = false,
hypersomnia = false,
indiscriminate_trust = false,

repenting = false,
porphyria = false
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>clear afflictions</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function clear_afflictions(type)
 clear_affs = {}
 for i in pairs(afflictions) do
  if afflictions[i].cures[type] ~= nil then
   if afflictions[i].cures[type] == last[type] and afflictions[i].state ~= &quot;healed&quot; then
    table.insert(clear_affs, i)
    aff_remove(i)
   end
  end
 end
 if #clear_affs &gt; 0 then
  cecho(&quot;&lt;red&gt;\n[Removing:&quot;)
  for k in pairs(clear_affs) do
   if clear_affs[k] then
    cecho(&quot;&lt;blue&gt; &quot;..clear_affs[k])
   end
  end
  cecho(&quot;&lt;red&gt;]&quot;)
  send(&quot; &quot;)
 end
end
</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>defenses</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>table</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

less_defs = {}

defenses = {
--VIGILANCE
def_notice = {defense = &quot;increased notice&quot;, balance = {equilibriumtake = &quot;notice&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_skywatch = {defense = &quot;skywatch&quot;, balance = {equilibriumtake = &quot;skywatch on&quot;}, state= &quot;down&quot;, needit=false, timer = createStopWatch()},
def_deathsense = {defense = &quot;deathsense&quot;, balance = {needyequilibriumtake= &quot;deathsense on&quot;}, state=&quot;down&quot;, needit = false, timer = createStopWatch()},
def_nightvision = {defese = &quot;nightvision&quot;, balance = {needybalancetake= &quot;nightvision on&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_insomnia = {defense = &quot;insomnia&quot;, balance = {equilibriumtake= &quot;insomnia&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
--def_forboding = {defense = &quot;forboding&quot;
--def_premonition =
--Fighting
def_selfishness = {defense = &quot;selfishness&quot;, balance =  {balancetake= &quot;selfishness&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
--def_lantern =
--def_sun =
--def_thirdeye =
--def_skull =
--def_lotus =
--def_hourglass =
def_rose = {defense = &quot;scent of roses&quot;, balance = {balancetake= &quot;touch rose&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
--def_owl =
--def_tree =
--Soldier
def_grip = {defense = &quot;solid grip&quot;, balance = {balanceneed=&quot;grip&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_warcry = {defense = &quot;call to war&quot;, balance = {balancetake=&quot;warcry&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
--def_tenacity = {defense = &quot;focused tenacity&quot;, balance = {
--Rogue 
def_hiding = {defense = &quot;hide&quot;, balance = {balancetake=&quot;hide&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_arrowsense = {defense = &quot;arrowsense&quot;, balance = {balancetake=&quot;arrowsense&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_shadowmend = {defense = &quot;shadowmend&quot;, balance = {equilibriumtake=&quot;shadowmend&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
--Mage
def_windweave = {defense = &quot;windweave&quot;, balance = {balancetake=&quot;cast windweave&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_levitate = {defense = &quot;levitate&quot;, balance = {balancetake=&quot;cast levitate&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_mirror_image = {defense = &quot;mirror image&quot;, balance = {balancetake=&quot;cast mirror image&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_spellshield = {defense = &quot;golden spellshield&quot;, balance = {balancetake=&quot;cast spellshield&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_arcanepower = {defense = &quot;arcane power&quot;, balance = {balancetake=&quot;cast arcane power&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_stormfury = {defense = &quot;stormfury&quot;, balance = {needyequilibriumtake=&quot;stormfury embrace&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_anachronize = {defense = &quot;anachronize&quot;, balance = {needybalancetake=&quot;cast anachronize&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_waterbreathing = {defense = &quot;waterbreathing&quot;, balance = {needybalancetake=&quot;cast waterbreathing&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_fireshield = {defense = &quot;fire elemental shield&quot;, balance = {needybalancetake= &quot;cast elementshield fire&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_frostshield = {defense = &quot;frost elemental shield&quot;, balance = {needybalancetake= &quot;cast elementshield frost&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_arcaneshield = {defense = &quot;arcane elemental shield&quot;, balance = {needybalancetake= &quot;cast elementshield arcane&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_electricshield = {defense = &quot;electric elemental shield&quot;, balance = {needybalancetake= &quot;cast elementshield electric&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_witchsight = {defense = &quot;witchsight&quot;, balance = {needybalancetake=&quot;witchsight&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
--Priest 
def_divine_armor = {defense = &quot;divine armor&quot;, balance = {needyequilibriumtake=&quot;pray for divine armor&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_glorious = {defense = &quot;glorious word&quot;, balance = {needybalancetake=&quot; pray for glorious word&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_illuminated = {defense = &quot;illuminated word&quot;, balance = {needybalancetake=&quot;pray for illuminated word&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_radiant = {defense = &quot;radiant word&quot;, balance = {needybalancetake=&quot;pray for radiant word&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_blessed = {defense = &quot;blessed word&quot;, balance = {needybalancetake=&quot;pray for blessed word&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()},
def_righteous = {defense = &quot;righteous word&quot;, balance = {needybalancetake= &quot;pray for righteous word&quot;}, state = &quot;down&quot;, needit = false, timer = createStopWatch()}

}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>give/take</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function def_check()
 for i in pairs(defenses) do
  if defenses[i].state == &quot;waiting&quot; and getStopWatchTime(defenses[i].timer) &gt; 2 then
   def_timeout(i)
  end
 end
end

function def_timeout(defense)
 defenses[defense].state = &quot;down&quot;
 cecho(&quot;&lt;brown&gt;\n[Resetting defense: &quot;..defense..&quot;!]&quot;)
 send(&quot; &quot;)
end

function def_gain(defense)
 deleteLine()
 cecho(&quot;&lt;green&gt;\nYou: GAIN &quot;..defense)
 if not string.find(defense, &quot;def_&quot;) then
  defense = &quot;def_&quot;..defense
 end
 x = stopStopWatch(defenses[defense].timer)
-- resetStopWatch(defenses[defense].timer)
 def_have(defense)
 defenses[defense].timer = createStopWatch()
end

function def_have(defense)
 if not string.find(defense, &quot;def_&quot;) then
  defense = &quot;def_&quot;..defense
 end
 defenses[defense].state = &quot;deffed&quot;
 for i in pairs(less_defs) do
  if less_defs[i] == defense then
   defenses[defense].needit = false
   table.remove(less_defs, i)
  end
 end
end

function def_def(defense)
 if sent.def then
  deleteLine()
  cecho(&quot;&lt;green&gt;\n&quot;..defense)
  def_have(defense)
 end
end

function def_take(defense)
 if not string.find(defense, &quot;def_&quot;) then
  defense = &quot;def_&quot;..defense
 end
 if defenses[defense].state == &quot;deffed&quot; then
  deleteLine()
  cecho(&quot;&lt;red&gt;\nYou: LOSE &quot;..defense)
 end
 def_remove(defense)
end

function def_remove(defense)
 if not string.find(defense, &quot;def_&quot;) then
  defense = &quot;def_&quot;..defense
 end
 defenses[defense].state = &quot;down&quot;
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>load options</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function load_def(option)
 if def_options[option] ~= nil then
  cecho(&quot;&lt;green&gt;Loading defense options for: &quot;..option)
  send(&quot; &quot;)
  less_defs = {}
  for i in pairs(defenses) do
   defenses[i].needit = false
   for h in pairs(def_options[option]) do
    if def_options[option][h] == &quot;once&quot; then
     if h == i then
      if defenses[i].state ~= &quot;deffed&quot; then
       defenses[i].needit = true
       table.insert(less_defs, i)
      end
     end
    elseif def_options[option][h] == &quot;on&quot; then
     if h == i then
      defenses[i].needit = true
     end
    end
   end
  end
 else
  cecho(&quot;&lt;red&gt;No such defense option as &quot;..option..&quot;!&quot;)
  send(&quot; &quot;)
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>options</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

def_options = {

none = {
},

basic = {
def_rose = &quot;on&quot;,
def_insomnia = &quot;on&quot;,
def_deathsense = &quot;once&quot;,
def_selfishness = &quot;on&quot;
},

soldier = {
def_rose = &quot;on&quot;,
def_skywatch = &quot;once&quot;,
def_deathsense = &quot;once&quot;,
def_nightvision = &quot;once&quot;,
def_insomnia = &quot;on&quot;,
--def_selfishness = &quot;on&quot;,
def_grip = &quot;on&quot;,
def_warcry = &quot;on&quot;
},

rogue = {
def_rose = &quot;on&quot;,
def_insomnia = &quot;on&quot;,
def_deathsense = &quot;once&quot;,
def_hiding = &quot;once&quot;
},

thief = {
def_rose = &quot;on&quot;,
--def_insomnia = &quot;on&quot;,
def_deathsense = &quot;once&quot;,
def_hiding = &quot;once&quot;,
def_sneaking = &quot;once&quot;,
def_arrowsense = &quot;once&quot;
},

priest = {
def_rose = &quot;on&quot;,
def_skywatch = &quot;once&quot;,
def_deathsense = &quot;once&quot;,
def_insomnia = &quot;on&quot;,
def_nightvision = &quot;once&quot;,
def_divine_armor = &quot;once&quot;,
def_glorious = &quot;once&quot;,
def_illuminated = &quot;once&quot;,
def_radiant = &quot;once&quot;,
def_blessed = &quot;once&quot;,
def_righteous = &quot;once&quot;
},

mage = {
def_rose = &quot;on&quot;,
def_skywatch = &quot;once&quot;,
def_deathsense = &quot;once&quot;,
def_insomnia = &quot;on&quot;,
def_nightvision = &quot;once&quot;,
def_spellshield = &quot;on&quot;,
def_arcane_power = &quot;on&quot;,
def_windweave = &quot;on&quot;,
def_levitate = &quot;once&quot;,
def_mirror_image = &quot;once&quot;
}

}</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>defending</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>table</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

attacks = {
--STOP DEFENSES
atk_censure = {def = &quot;block&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
atk_omen = {def = &quot;block&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 2},
atk_cripple = {def = &quot;parry&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 3},
atk_cruncharms = {def = &quot;duck&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
atk_hemorrhage = {def = &quot;dodge&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.3},
atk_torture = {def = &quot;parry&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 2},
atk_cheapshot = {def = &quot;duck&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.5},
atk_pulverize = {def = &quot;block&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
atk_hamstring = {def = &quot;jump&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 0.8},
--ENTANGLEMENTS
atk_impale = {def = &quot;dodge&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 2.5},
atk_grab = {def = &quot;block&quot;, class = &quot;none&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 2.8},
atk_earthbind = {def = &quot;dodge&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 2},
--INSTANT KILLS
atk_heretic = {def = &quot;duck&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
atk_atonement = {def = &quot;block&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 2},
atk_retribution = {def = &quot;dodge&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.5},
atk_compulse = {def = &quot;jump&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 4},
atk_instability = {def = &quot;duck&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 3},
atk_burstorgans = {def = &quot;duck&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
--SLOW DOWNS
atk_disarm = {def = &quot;parry&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 0.5},
atk_flourish = {def = &quot;parry&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 0.1},
atk_bind = {def = &quot;block&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
atk_immolate = {def = &quot;block&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
atk_glint = {def = &quot;jump&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 0.5},
atk_blackeye = {def = &quot;jump&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 0.5},
atk_avenging = {def = &quot;dodge&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.5},
atk_wristflick = {def = &quot;dodge&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
atk_backslice = {def = &quot;duck&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.5},
atk_wrack = {def = &quot;dodge&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
atk_chill = {def = &quot;block&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 3},
atk_cleave = {def = &quot;duck&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 2},
atk_sleep = {def = &quot;block&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 4.2},
atk_knockdown = {def = &quot;dodge&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
--OTHER IMPORTANT STUFF
atk_press = {def = &quot;block&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.5},
atk_gale = {def = &quot;duck&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
atk_howlofterror = {def = &quot;duck&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
atk_puncture = {def = &quot;block&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
atk_heartstrike = {def = &quot;duck&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
--OTHER AFFLICTIONS
atk_enervating_jab = {def = &quot;dodge&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 2.7},
atk_rupture = {def = &quot;jump&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.9},
atk_mutilating_hack = {def = &quot;block&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 2.1},
atk_enfeeble = {def = &quot;duck&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.7},
atk_wildstrike = {def = &quot;parry&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.9},
atk_skylash = {def = &quot;parry&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
atk_shatter = {def = &quot;dodge&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
atk_shatter_left_leg = {def = &quot;parry&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.5},
atk_shatter_left_arm = {def = &quot;parry&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.5},
atk_shatter_right_leg = {def = &quot;parry&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.5},
atk_shatter_right_arm = {def = &quot;parry&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1.5},
atk_lance = {def = &quot;duck&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 2.5},
atk_vileblade = {def = &quot;dodge&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.5},
atk_lungstab = {def = &quot;dodge&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 0.5},
atk_suckerpunch = {def = &quot;block&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.3},
atk_nervestrike = {def = &quot;parry&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1},
atk_fleche = {def = &quot;duck&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 1.5},
atk_sunder = {def = &quot;jump&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, weapon = nil, defend_now = false, delay = 0.8},
atk_rake = {def = &quot;parry&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_gutsmash = {def = &quot;block&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_slitthroat = {def = &quot;jump&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_legslice = {def = &quot;duck&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_headsmash = {def = &quot;dodge&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_earbash = {def = &quot;jump&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_burstlungs = {def = &quot;duck&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_crushskull = {def = &quot;block&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_brainbash = {def = &quot;duck&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_chestbash = {def = &quot;block&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_lowblow = {def = &quot;block&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_pommel = {def = &quot;parry&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 0.8},
atk_repentance = {def = &quot;duck&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2.5},
atk_scabies = {def = &quot;block&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_nightmare = {def = &quot;duck&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_seduce = {def = &quot;parry&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_dementia = {def = &quot;block&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 3.2},
atk_disorient = {def = &quot;jump&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2},
atk_static = {def = &quot;parry&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 0.5},
atk_tether = {def = &quot;jump&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2},
atk_warp = {def = &quot;parry&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_timeshift = {def = &quot;block&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
--DAMAGE ONLY
atk_mandate = {def = &quot;duck&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1.7},
atk_assault = {def = &quot;parry&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 3},
atk_obliterate = {def = &quot;dodge&quot;, class = &quot;none&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 0},
atk_thrust = {def = &quot;dodge&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1.2},
atk_crossbow = {def = &quot;duck&quot;, class = &quot;none&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay  = 0},
atk_crossbowed = {def = &quot;duck&quot;, class = &quot;none&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay  = 0},
atk_balestra = {def = &quot;parry&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 0.5},
atk_inquartata = {def = &quot;parry&quot;, class = &quot;rogue&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 0.3},
atk_canto = {def = &quot;duck&quot;, class = &quot;none&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_fury = {def = &quot;duck&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2},
atk_holyfire = {def = &quot;parry&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1.5},
atk_searingarc = {def = &quot;block&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2.5},
atk_vindication = {def = &quot;dodge&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_damnation = {def = &quot;block&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 3},
atk_holysword = {def = &quot;parry&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1.5},
atk_pimmolate = {def = &quot;parry&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_illuminate = {def = &quot;jump&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_bloodboil = {def = &quot;dodge&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_embers = {def = &quot;jump&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_melt = {def = &quot;parry&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_terror = {def = &quot;parry&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_soulspear = {def = &quot;dodge&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_burdensoul = {def = &quot;jump&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_withering = {def = &quot;block&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_exorcism = {def = &quot;parry&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_gravechill = {def = &quot;parry&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_icygrasp = {def = &quot;parry&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_despair = {def = &quot;parry&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_funeralmass = {def = &quot;jump&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_vision = {def = &quot;parry&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_impendingdoom = {def = &quot;jump&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_slash = {def = &quot;parry&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_shieldsmash = {def = &quot;dodge&quot;, class = &quot;soldier&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1.7},
atk_strike = {def = &quot;jump&quot;, class = &quot;none&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_stormlance = {def = &quot;duck&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1.2},
atk_ignite = {def = &quot;dodge&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2.8},
atk_icespikes = {def = &quot;dodge&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2},
atk_keltonsknives = {def = &quot;jump&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_curseoftongues = {def = &quot;parry&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_necroticplague = {def = &quot;jump&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_savage = {def = &quot;parry&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2.5},
atk_phlegm = {def = &quot;parry&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 3},
atk_mutilate = {def = &quot;dodge&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2.3},
atk_thrum = {def = &quot;jump&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1.5},
atk_lunarbay = {def = &quot;jump&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2},
atk_gluttonous = {def = &quot;block&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1.5},
atk_sanguis = {def = &quot;dodge&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 3},
atk_feralrake = {def = &quot;block&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2.5},
atk_rending = {def = &quot;parry&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2},
atk_yellowbile = {def = &quot;block&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2.5},
atk_knifeofwoe = {def = &quot;jump&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 3},
atk_carnalscream = {def = &quot;jump&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2.5},
atk_scarlethorror = {def = &quot;jump&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 3},
atk_blackbile = {def = &quot;duck&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 3},
atk_betrayal = {def = &quot;jump&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_lash = {def = &quot;jump&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1.3},
atk_disgust = {def = &quot;dodge&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1.7},
atk_deceive = {def = &quot;dodge&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1.7},
atk_scarab = {def = &quot;jump&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2.7},
atk_horrify = {def = &quot;duck&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delat = 3.7},
--UNBLOCKABLE
atk_kneel = {def = &quot;dodge&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_thunder = {def = &quot;duck&quot;, class = &quot;priest&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_earthquake = {def = &quot;jump&quot;, class = &quot;mage&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 1},
atk_trip = {def = &quot;block&quot;, class = &quot;none&quot;, getting_hit = false, attacker = &quot;none&quot;, defend_now = false, delay = 2.5}
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>on telegraph</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function atk_kill(attacker, attack)
 cecho(&quot;&lt;blue&gt;\n*************************************************&quot;)
 cecho(&quot;&lt;red&gt;\n&quot;..attacker..&quot; will succeed &quot;..attack..&quot; on you!&quot;)
 cecho(&quot;&lt;blue&gt;\n*************************************************&quot;)
end

function atk_start(attacker, weapon, attack)
 if toggles.defecho then
  deleteLine()
  cecho(&quot;&lt;purple&gt;\n&quot;..attacker..&quot;: START &quot;..attack..&quot; you!&quot;)
 end
 if not string.find(attack, &quot;atk_&quot;) then
  attack = &quot;atk_&quot;..attack
 end
 enemy_attack = attack
 enemy_attacker = attacker
 enemy_weapon = weapon
 enemy_class = attacks[attack][&quot;class&quot;]
 if enemy_class ~= &quot;soldier&quot; then
  for i in pairs(attacks) do
   if attacks[i].attacker == enemy_attacker then
    reset_attack(i)
   end
  end
 end
 attacks[attack][&quot;getting_hit&quot;] = true
 attacks[attack][&quot;attacker&quot;] = attacker
-- db:add(data.times, {attacker, enemy_class, attack, weapon})
 if attack_timers[attacker] == nil then
  attack_timers[attacker] = {}
 end
-- if weapon == nil then
  if attack_timers[attacker][attack] == nil then
   attack_timers[attacker][attack] = createStopWatch()
  else
   resetStopWatch(attack_timers[attacker][attack])
   startStopWatch(attack_timers[attacker][attack])
  end
-- else
--  if attack_timers[attacker][attack] == nil then
--   attack_timers[attacker][attack] = {}
--  end
--  if attack_timers[attacker][attack][weapon] == nil then
--   attack_timers[attacker][attack][weapon] = createStopWatch()
--  else
--   startStopWatch(attack_timers[attacker][attack])
--  end
-- end
 if attack_times[attacker] == nil then
  attack_times[attacker] = {}
 end
-- if weapon == nil then
  if attack_times[attacker][attack] ~= nil then
   current_delay = attack_times[attacker][attack]-0.5-getNetworkLatency()
  else
   current_delay = attacks[attack][&quot;delay&quot;]-0/5-getNetworkLatency()
  end
-- else
--  if attack_times[attacker][attack] == nil then
--   attack_times[attacker][attack] = {}
--  end
--  if attack_times[attacker][attack][weapon] ~= nil then
--   current_delay = attack_times[attacker][attack][weapon]-0.5-getNetworkLatency()
--  else
--   current_delay = attacks[attack][&quot;delay&quot;]-getNetworkLatency()
--  end
-- end
 if attacker == anachronized then
  current_delay = math.floor(current_delay/2)
 end
 if current_delay &lt; 0 then
  current_delay = 0
 end
 if timewarp then
  if current_delay &gt;= 1 then
   current_delay = current_delay-1
  else
   current_delay = -1
  end
 end
 if current_delay ~= -1 then
  tempTimer( current_delay, [[atk_need(enemy_attack)]] )
 end
 echo(&quot; &quot;..current_delay)
 aff_remove(&quot;blackout&quot;)
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>after delay</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function atk_need(attack)
 if attacks[attack][&quot;getting_hit&quot;] then
  attacks[attack][&quot;defend_now&quot;] = true
  defending = false
 end
 do_all()
end
</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>on ending</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function atk_hit(attacker, weapon, attack)
 if toggles.defecho then
  deleteLine()
  cecho(&quot;&lt;purple&gt;\n&quot;..attacker..&quot;: &quot;)
  cecho(&quot;&lt;red&gt;HIT &quot;)
  cecho(&quot;&lt;purple&gt;&quot;..attack..&quot; you!&quot;)
 end
 atk_end(attacker, weapon, attack)
 check_reckless = true
end

function atk_miss(attacker, weapon, attack)
 if not string.find(attack, &quot;atk_&quot;) then
  attack = &quot;atk_&quot;..attack
 end
 if toggles.defecho then
  if attacks[attack][&quot;class&quot;] == &quot;soldier&quot; then
   if attacks[attack][&quot;gettinghit&quot;] then
    deleteLine()
    cecho(&quot;&lt;purple&gt;\n&quot;..attacker..&quot;: &quot;)
    cecho(&quot;&lt;green&gt;MISS &quot;)
    cecho(&quot;&lt;purple&gt;&quot;..attack..&quot; you!&quot;)
   end
  else
   deleteLine()
   cecho(&quot;&lt;purple&gt;\n&quot;..attacker..&quot;: &quot;)
   cecho(&quot;&lt;green&gt;MISS &quot;)
   cecho(&quot;&lt;purple&gt;&quot;..attack..&quot; you!&quot;)
  end
 end
 atk_end(attacker, weapon, attack)
end

function atk_defend(attacker, weapon, attack, defense)
 for i in pairs(defendings) do
  if string.find(defense, defendings[i]) then
   if toggles.defecho then
    deleteLine()
    cecho(&quot;&lt;purple&gt;\n&quot;..attacker..&quot;: &quot;)
    cecho(&quot;&lt;green&gt;FAIL &quot;)
    cecho(&quot;&lt;purple&gt;&quot;..attack..&quot; you!&quot;)
   end
   atk_end(attacker, weapon, attack)
   defended(attacker, string.upper(i))
   check_reckless = true
  end
 end
end

function reset_attack(attack)
--reset time
 ended(attack)
end

function defending_check()
 for i in pairs(attacks) do
  if attacks[i].getting_hit and getStopWatchTime(attack_timers[attacks[i].attacker][i]) &gt; 5 and getStopWatchTime(attack_timers[attacks[i].attacker][i]) &lt; 20 then
   reset_attack(i)
    cecho(&quot;&lt;brown&gt;\n[Resetting attack: &quot;..i..&quot;!]&quot;)
    send(&quot; &quot;)
  end
 end
end

function atk_end(attacker, weapon, attack)
 if not string.find(attack, &quot;atk_&quot;) then
  attack = &quot;atk_&quot;..attack
 end
 if attacks[attack].getting_hit then
--  if weapon == nil then
   tele_time = stopStopWatch(attack_timers[attacker][attack])-getNetworkLatency()
   resetStopWatch(attack_timers[attacker][attack])
--  else
--   tele_time = stopStopWatch(attack_timers[attacker][attack][weapon])-getNetworkLatency()
--   resetStopWatch(attack_timers[attacker][attack])
--  end
  if tele_time &lt;= 5 then
   if attack_times[attacker] == nil then
    attack_times[attacker] = {}
   end
--   if weapon == nil then
    if attacker ~= anachronized then
     attack_times[attacker][attack] = tele_time
    end
--   else
--    if attack_times[attacker][attack] == nil then
--     attack_times[attacker][attack] = {}
--    end
--    if attacker ~= anachronized then
--     attack_times[attacker][attack][weapon] = tele_time
--    end
--   end
   echo(&quot; &quot;..tele_time)
  end
 end
 if attacker == nil then
  ended(attack)
 elseif attack == &quot;Someone&quot; then
  ended(attack)
 elseif attacks[attack].attacker == attacker then
  ended(attack)
 end
 aff_remove(&quot;blackout&quot;)
end

function ended(attack)
 if not string.find(attack, &quot;atk_&quot;) then
  attack = &quot;atk_&quot;..attack
 end
 attacks[attack][&quot;getting_hit&quot;] = false
 attacks[attack][&quot;defend_now&quot;] = false
 attacks[attack][&quot;attacker&quot;] = &quot;none&quot;
end

function defended(attacker, defense)
 if toggles.defecho then
  cecho(&quot;&lt;purple&gt;\nYou: &quot;)
  cecho(&quot;&lt;green&gt;&quot;..defense)
  cecho(&quot;&lt;purple&gt; &quot;..attacker..&quot;!&quot;)
 end
 recent_defend = true
 tempTimer(5, [[recent_defend = false]])
end

function do_counter()
 if recent_defend then
  if toggles.healing and (my.class == &quot;soldier&quot;) and can.counter and balance.bal and not prone and not entangled then
   set_send(&quot;counter &quot;..targ)
   recent_defend = false
  elseif toggles.healing and (my.class == &quot;rogue&quot;) and can.inquartata then
   set_send(&quot;inquartata &quot;..targ)
   recent_defend = false
  end
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>defended table</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

defendings = {
dodge = &quot;You twirl to the side, partially dodging (.*) attack.&quot;,
duck = &quot;You partially duck under (.*) attack.&quot;,
jump = &quot;You leap away, avoiding the full brunt of (.*) aggression.&quot;,
parry = &quot;You deftly parry (.*) maneuver.&quot;,
block = &quot;You skillfully block, mitigating (.*) full assault.&quot;,
repulse = &quot;You strategically repulse (.*) manuever.&quot;,
shield = &quot;A scintillating shield of light blossoms before you, protecting you.&quot;,
}</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>utilities</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>fishing</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>chat</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>tables</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

channels = {
citytells = {},
ordertells = {},
guildtells = {},
novicetells = {},
markettells = {},
newbietells = {}
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>parsing</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function parse_chat(channel, message)
 if #channels[channel] &gt;= 20 then
  table.remove(channels[channel], 1)
 end
 table.insert(channels[channel], message)
end</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>bashing</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>bashing functions</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function do_bashing()
 if (not targeted) and (not waiting.ih) then
  set_send(&quot;ih&quot;)
  waiting.ih = true
 end
 if my.class == &quot;rogue&quot; and have_target and can.shadowmend and defenses.def_shadowmend.state ~= &quot;deffed&quot; and toggles.shadowmending and (tonumber(gmcp.Char.Vitals.gp) &gt;= 50) and balance.equil and not waiting.equilibrium then
  set_send(&quot;shadowmend&quot;)
  bashing_shadowmend = true
  waiting.equilibrium = true
  tempTimer(1, [[waiting.equilibrium = false]])
 end
 if balance.balance and not waiting.balance then
  if targeted then
   waiting.balance = true
   tempTimer(1, [[waiting.balance = false]])
   bashing_function()
  end
 elseif balance.offhand and not waiting.offhand and my.class == &quot;soldier&quot; and can.dual and targeted and have_target and enemy_health ~= &quot;&lt;red&gt; 0-10%&quot; and enemy_health ~= &quot;&lt;red&gt; 10-25%&quot; then
  waiting.offhand = true
  tempTimer(1, [[waiting.offhand = false]])
  bashing_function()
 end
end
function bashing_function()
 if my.class == &quot;soldier&quot; then
  soldier_bash()
 elseif my.class == &quot;magician&quot; then
  magician_bash()
 elseif my.class == &quot;rogue&quot; then
  rogue_bash()
 elseif my.class == &quot;priest&quot; then
  priest_bash()
 else
  set_send(&quot;attack &quot;..target)
 end
end
function soldier_bash()
 if toggles.berserking and can.berserk and have_target and (not berserked) and balance.balance then
  set_send(&quot;berserk&quot;)
 end
 if toggles.threatening then
  set_send(&quot;threaten &quot;..target)
 end
 if need_last_stand and can.laststand and balance.equilibrium then
  set_send(&quot;stand true&quot;)
 elseif not sundered and can.sunder and toggles.sundering then
  set_send(&quot;sunder &quot;..target)
 elseif vitals.adrenaline &gt; 90 then
  set_send(&quot;obliterate &quot;..target)
 elseif my.weapon == &quot;maul&quot; then
  set_send(&quot;club &quot;..target)
 else
  set_send(&quot;slash &quot;..target)
 end
end
function magician_bash()
 if can.anachronize and toggles.anachronizing and balance.anachronize then
  set_send(&quot;cast anachronize&quot;)
 elseif not ignited and toggles.igniting and can.ignite then
  set_send(&quot;cast ignite &quot;..target)
 elseif ignited and can.immolate and toggles.immolating and (enemy_health == &quot;&lt;red&gt; 0-10%&quot; or enemy_health == &quot;&lt;red&gt; 10-25%&quot;) then
  set_send(&quot;cast immolate &quot;..target)
 elseif barrage and can.barrage and toggles.barraging then
  set_send(&quot;cast eldritch barrage &quot;..target)
 elseif toggles.spiking and can.icespikes then
  set_send(&quot;cast ice spikes &quot;..target)
 else
  set_send(&quot;cast stormlance &quot;..target)
 end
end
function rogue_bash()
 if (not fleched) and toggles.fleching then
  set_send(&quot;fleche &quot;..target)
  inquartata = false
 elseif inquartata and can.inquartata then
  set_send(&quot;inq &quot;..target)
 else
  set_send(&quot;thrust &quot;..target)
 end
end
function priest_bash()
 if need_heal then
  priest_heal()
  need_heal = false
 elseif (percents.health &lt; 75) and (vitals.faith &gt; 70) then
  set_send(&quot;smite &quot;..target..&quot; with zealous mandate&quot;)
 elseif (percents.health &lt; 60) then
  ally = nil
  priest_heal()
 elseif (not hereticed) and toggles.hereticing and (vitals.faith &gt; 200) then
  set_send(&quot;smite &quot;..target..&quot; with heresy&quot;)
 elseif (not savaged) and toggles.savaging and can.savage then
  set_send(&quot;bloodcall savage &quot;..target)
 elseif vitals.faith &gt; 300 and can.holysword then
  set_send(&quot;smite &quot;..target..&quot; with holy sword&quot;)
 elseif enemy_health == &quot;&lt;brown&gt; UNDEAD&quot; and can.holyfire then
  set_send(&quot;smite &quot;..target..&quot; with holy fire&quot;)
 else
  set_send(&quot;smite &quot;..target..&quot; with fury&quot;)
 end
end

function priest_heal()
 if ally == nil then
  set_send(&quot;pray for healing&quot;)
 else
  set_send(&quot;pray for healing of &quot;..ally)
  ally = nil
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>looting</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function do_loot()
 if have_items then
  if balance.balance and balance.equilibrium and not waiting.balance and not waiting.equilibrium and not_aff(&quot;prone&quot;) and not_entangled() then
   loot_it()
  end
 elseif not waiting.ih then
  corpses = {}
  gathering = {}
  set_send(&quot;ih&quot;)
  waiting.ih = true
  tempTimer(delay(), [[waiting.ih = false]])
 end
end

function loot_it()
 for i in ipairs(corpses) do
  set_send(&quot;get &quot;..corpses[i])
 end
 for h in ipairs(gathering) do
  set_send(&quot;get &quot;..gathering[h])
 end
 set_send(&quot;get coins&quot;)
 do_pack(&quot;put coins in pack&quot;)
 corpses = {}
 gathering = {}
 have_items = false
 need_loot = false
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>offering</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function offer_corpses()
 if have_offerings then
  for i in pairs(corpses) do
   send(&quot;offer &quot;..corpses[i])
  end
  have_offerings = false
  corpses = {}
 else
  send(&quot;ii corpse&quot;)
  have_offerings = true
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>no target</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function no_target()
 deleteLine()
 cecho(&quot;\n&lt;green&gt;Need new targets!&quot;)
 have_target = false
 targeted = false
 waiting.ih = false
 waiting.balance = false
 target_priority = 10000
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>clickable</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function addautobashitem(desc)
 
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>start bashing</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function start_bashing(hitting)
 targeted = true
 bashing = true
 target = hitting
 do_bashing()
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>area list</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

areas = {
{area = &quot;Elvandar&quot;, level = &quot;Ratting&quot;, targets = {&quot;a lumbering red weevil&quot;, &quot;a fat green weevil&quot;, &quot;a large wood weevil&quot;, &quot;a hulking green weevil&quot;}},
{area = &quot;the Outpost of Eggerson&quot;, level = &quot;0-20&quot;, targets = {&quot;a male renegade Keshian&quot;, &quot;a renegade Keshian woman&quot;, &quot;a female Roldem renegade&quot;, &quot;a Roldem renegade&quot;, &quot;a mercenary valeman&quot;, &quot;a valewoman mercenary&quot;, &quot;a female Quegan renegade&quot;, &quot;a renegade Quegan male&quot;, &quot;a dove&quot;}},
{area = &quot;the Frontier Valley&quot;, level = &quot;0-20&quot;, targets = {&quot;a temple guard of Prandur&quot;, &quot;a temple guard of Guis%-Wan&quot;, &quot;a guard bearing the symbol of Lims%-Kragma&quot;, &quot;a male villager&quot;, &quot;a female villager&quot;, &quot;a small child&quot;, &quot;a restless ghost&quot;, &quot;a spectral warrior&quot;, &quot;a goblin servant&quot;, &quot;a goblin priest&quot;, &quot;a moredhel spellweaver&quot;}},
{area = &quot;the Sedia Tunnels&quot;, level = &quot;0-20&quot;, targets = {&quot;a large black scorpion&quot;, &quot;a large red scorpion&quot;, &quot;a giant worker ant&quot;, &quot;a giant soldier ant&quot;, &quot;a dwarven miner&quot;, &quot;a dwarven warrior&quot;, &quot;a small goblin&quot;}},
{area = &quot;a Beaver Dam&quot;, level = &quot;10-30&quot;, targets = {&quot;a muskrat&quot;, &quot;a black spider&quot;, &quot;a beaver&quot;}},
{area = &quot;the Dirge Swamp&quot;, level = &quot;10-30&quot;, targets = {&quot;a green and red dragonfly&quot;, &quot;a large mosquito&quot;}},
{area = &quot;Grey Towers&quot;, level = &quot;10-30&quot;, targets = {&quot;&quot;}},
{area = &quot;Smuggler's Cove&quot;, level = &quot;20-40&quot;, targets = {&quot;a smuggler&quot;, &quot;a scallywag sailor&quot;, &quot;a Quegan mariner&quot;, &quot;a seagull&quot;, &quot;a large sandcrawler&quot;, &quot;a large clam&quot;}},
{area = &quot;an Imp Cave&quot;, level = &quot;20-40&quot;, targets = {&quot;an imp rascal&quot;, &quot;a scavenger imp&quot;, &quot;a giant glow%-worm&quot;, &quot;a glow%-worm&quot;}},
{area = &quot;Ig'tur Trollcamp&quot;, level = &quot;30-50&quot;, targets = {&quot;a black mountain troll&quot;, &quot;a female cave troll&quot;}},
{area = &quot;the Isbandia Lake&quot;, level = &quot;30-50&quot;, targets = {&quot;a brook trout&quot;, &quot;a large salmon&quot;}},
{area = &quot;the Barony of Yarsog&quot;, level = &quot;40-60&quot;, targets = {&quot;a female soldier&quot;}},
{area = &quot;a Lions Den&quot;, level = &quot;40-60&quot;, targets = {&quot;a sleek lioness&quot;, &quot;a young male lion&quot;, &quot;a small lion cub&quot;}},
{area = &quot;countryside east of Krondor&quot;, level = &quot;40-70&quot;, targets = {&quot;a male bandit&quot;, &quot;a female bandit&quot;}},
{area = &quot;Bandit Camp&quot;, level = &quot;50-70&quot;, targets = {&quot;a male bandit&quot;, &quot;a female bandit&quot;, &quot;a bandit guard&quot;, &quot;a guard dog&quot;, &quot;a bandit scout&quot;, &quot;a plump wood fowl&quot;}},
{area = &quot;Far Coast Beaches&quot;, level = &quot;40-60&quot;, targets = {&quot;&quot;}},
{area = &quot;the Hadati Hills&quot;, level= &quot;30-50&quot;, targets = {&quot;a Moredhel assassin&quot;, &quot;a Moredhel ranger&quot;}},
{area = &quot;a crypt in the Highlands&quot;, level = &quot;40-80&quot;, targets = {&quot;a revenant retainer&quot;, &quot;an undead chieftain&quot;, &quot;a death cult priest&quot;, &quot;a Hadati ghost&quot;, &quot;the ghost of a Hadati Elder&quot;, &quot;the ghost of a Hadati Lord&quot;, &quot;a risen magician&quot;}},
{area = &quot;the Thunderhell Plains&quot;, level = &quot;60-100&quot;, targets = {&quot;a large salmon&quot;, &quot;a bison&quot;, &quot;an antlered caribou&quot;, &quot;a caribou&quot;}},
--{area = &quot;the Thunderhell Plains&quot;, level = &quot;60-100&quot;, targets = {&quot;a large salmon&quot;, &quot;a polar bear&quot;, &quot;a female polar bear&quot;, &quot;a bison&quot;, &quot;an antlered caribou&quot;, &quot;a caribou&quot;, &quot;a nomad warrior&quot;, &quot;a nomad&quot;, &quot;a nomadic hunter&quot;, &quot;a nomad woman&quot;}},
{area = &quot;Mac Mordain Cadal&quot;, level = &quot;60-100&quot;, targets = {&quot;a diseased moredhel sentinel&quot;, &quot;a diseased moredhel captain&quot;, &quot;a diseased moredhel warrior&quot;, &quot;a diseased Moredhel Guard&quot;, &quot;a diseased moredhel miner&quot;}, items = {&quot;a lump of iron ore&quot;, &quot;a lump of gold ore&quot;}},
{area = &quot;Uru Gathering&quot;, level = &quot;80-100&quot;, targets = {&quot;a giant brute&quot;, &quot;a giant soldier&quot;, &quot;Graag, a giant guard&quot;, &quot;Hungar, the giant hoardmaster&quot;, &quot;Grubans, a large giant&quot;, &quot;Pone, the giant lieutenant&quot;, &quot;Flork, the giant chieftain&quot;, &quot;a giantess dancer&quot;, &quot;a male giant&quot;, &quot;a female giant&quot;}},
--{area = &quot;the Green Heart Forest&quot;, level = &quot;questing&quot;, targets = {&quot;a white%-tailed deer&quot;, &quot;a short%-tusked boar&quot;, &quot;a small rabbit&quot;}}
{area = &quot;the Green Heart Forest&quot;, level = &quot;questing&quot;, targets = {&quot;a goblin&quot;, &quot;a small goblin&quot;, &quot;a forest troll&quot;, &quot;a young fawn&quot;, &quot;a tawny owl&quot;, &quot;a small forest bear&quot;, &quot;a powerful stag&quot;, &quot;a lively sparrow&quot;, &quot;a tiny field mouse&quot;, &quot;a wiry vixen&quot;, &quot;a wiry fox&quot;, &quot;a magnificent lion&quot;, &quot;a tree shrew&quot;, &quot;a delicate doe&quot;, &quot;a plump wood fowl&quot;, &quot;a delicate butterfly&quot;, &quot;a white%-tailed deer&quot;, &quot;a short%-tusked boar&quot;, &quot;a small rabbit&quot;}}
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>load targets</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function load_targets(area)
 my.area = area
 area_found = false
 for i in ipairs(areas) do
  if areas[i].area == area then
   area_found = true
   possible_targets = areas[i].targets
   echo(&quot;\n Level Range: &quot;..areas[i].level)
   cecho(&quot;\n&lt;green&gt;Possible Targets:&quot;)
   for h in ipairs(possible_targets) do
    echo(&quot;\n &quot;..possible_targets[h])
   end
   if areas[i].items then
    possible_items = areas[i].items
    cecho(&quot;\n&lt;green&gt;Gathering Items:&quot;)
    for k in ipairs(possible_items) do
     echo(&quot;\n &quot;..possible_items[k])
    end
   else
    possible_items = {}
   end
  end
 end
 if not area_found then
  cecho(&quot;\n&lt;green&gt;Unknown Area.&quot;)
  possible_targets = {}
  possible_items = {}
 end
end</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>attacking</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>attacking tracking</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function attack_start(hitting, curattk)
 if my.class ~= &quot;soldier&quot; then
  for i in pairs(my_attacks) do
   attack_end(i)
  end
 end
 my_attacks[curattk][&quot;hittingwith&quot;] = true
 my_attacks[curattk][&quot;targeting&quot;] = hitting
 if not balance.balance then
  balance.offhand = false
  tempTimer(20, [[if afflictions.aff_blackout.state ~= &quot;healed&quot; then balance.offhand = true end]])
 end
 if toggles.atkecho then
  deleteLine()
  cecho(&quot;&lt;magenta&gt;\nYou: START &quot;..curattk..&quot; &quot;..hitting..&quot;!&quot;)
 end
 startStopWatch(my_attacks[curattk].timer)
 aff_remove(&quot;blackout&quot;)
end
function attack_miss(hitting, curattk)
 if my_attacks[curattk][&quot;hittingwith&quot;] then
  if toggles.atkecho then
   deleteLine()
   cecho(&quot;&lt;magenta&gt;\nYou: &quot;)
   cecho(&quot;&lt;red&gt;MISS &quot;)
   cecho(&quot;&lt;magenta&gt;&quot;..curattk..&quot; &quot;..hitting..&quot;!&quot;)
  end
  my_time = stopStopWatch(my_attacks[curattk].timer)-getNetworkLatency()
  echo(&quot; &quot;..my_time)
  resetStopWatch(my_attacks[curattk].timer)
  if my.name == &quot;Stye&quot; then
   set_attack(&quot;smite &quot;..targ..&quot; with &quot;..curattk)
  end
 end
 attack_end(curattk)
end
function attack_hit(hitting, curattk)
 if toggles.atkecho then
  deleteLine()
  cecho(&quot;&lt;magenta&gt;\nYou: &quot;)
  cecho(&quot;&lt;green&gt;HIT &quot;)
  cecho(&quot;&lt;magenta&gt;&quot;..curattk..&quot; &quot;..hitting..&quot;!&quot;)
 end
 if my_attacks[curattk][&quot;hittingwith&quot;] then
  my_time = stopStopWatch(my_attacks[curattk].timer)-getNetworkLatency()
  echo(&quot; &quot;..my_time)
  resetStopWatch(my_attacks[curattk].timer)
 end
 attack_end(curattk)
end
function attack_defend(hitting, curattk)
 if toggles.atkecho then
  deleteLine()
  cecho(&quot;&lt;magenta&gt;\nYou: &quot;)
  cecho(&quot;&lt;red&gt;FAIL &quot;)
  cecho(&quot;&lt;magenta&gt;&quot;..curattk..&quot; &quot;..hitting..&quot;!&quot;)
 end
 if my_attacks[curattk][&quot;hittingwith&quot;] then
  my_time = stopStopWatch(my_attacks[curattk].timer)-getNetworkLatency()
  echo(&quot; &quot;..my_time)
  resetStopWatch(my_attacks[curattk].timer)
 end
 attack_end(curattk)
end
function attack_end(curattk)
 my_attacks[curattk][&quot;hittingwith&quot;] = false
 my_attacks[curattk][&quot;targeting&quot;] = &quot;none&quot;
end
function theydefended(hitting, defense)
 if toggles.atkecho then
  deleteLine()
  cecho(&quot;&lt;magenta&gt;\n&quot;..hitting..&quot;: &quot;)
  cecho(&quot;&lt;red&gt;&quot;..defense)
  cecho(&quot;&lt;magenta&gt; you!&quot;)
 end
 for i in pairs(my_attacks) do
  attack_end(i)
 end
end
</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>attacking table</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

my_attacks = {
slash = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
club = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
batter = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
grab = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
heartstrike = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
throwdown = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
cleave = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
headslam = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
obliterate = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
counter = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
shieldsmash = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
impale = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
bind = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
assault = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
sunder = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
rend = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
terminate = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
wildstrike = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
mhack = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
rupture = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
ejab = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
enfeeble = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
strike = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
rake = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
gutsmash = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
blackeye = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
slitthroat = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
legslice = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
nervestrike = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
cruncharms = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
headsmash = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
shatterLL = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
shatterRL = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
shatterLR = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
shatterRR = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
knockdown = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
earbash = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
burstlungs = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
crushskull = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
brainbash = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
chestbash = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
stomp = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
pulverize = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
burstorgans = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
thrust = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
fleche = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
hamstring = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
puncture = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
wristflick = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
lowblow = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
backslice = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
hemorrhage = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
beat = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
pommel = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
balestra = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
beguile = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
flourish = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
disarm = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
press = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
glint = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
inquartata = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
backstab = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
crossbow = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
hogtie = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
vileblade = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
cheapshot = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
lungstab = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
suckerpunch = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
canto = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
stormlance = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
ignite = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
chill = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
earthbind = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
ice_spikes = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
static_discharge = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()},
skylash = {deftype = &quot;parry&quot;, afftype = &quot;none&quot;, hittingwith = false, targeting = &quot;none&quot;, timer = createStopWatch()}
}</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
        </ScriptGroup>
    </ScriptPackage>
</MudletPackage>
